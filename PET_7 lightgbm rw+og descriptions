{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"machine_shape":"hm","gpuType":"T4","mount_file_id":"14z71a59yKhrNU7aklfECgmGPVc0ioikj","authorship_tag":"ABX9TyO85PWFfTwU0w7Ct+TSpzu0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["# LightGBM on OG & rewritten descriptions"],"metadata":{"id":"5wo7B3qlQhaX"}},{"cell_type":"markdown","source":["## Loading data"],"metadata":{"id":"lQoVsUjYQkzJ"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"O5_G4ErUKVWI"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import lightgbm\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, classification_report, confusion_matrix\n","from lightgbm import LGBMClassifier\n","from sklearn.metrics import log_loss\n","from scipy.sparse import hstack\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.preprocessing import OrdinalEncoder\n","\n","from gensim.models.doc2vec import Doc2Vec, TaggedDocument\n","from nltk.tokenize import word_tokenize\n","from nltk.corpus import stopwords\n","from nltk.stem import WordNetLemmatizer"]},{"cell_type":"code","source":["\n","X_train = pd.read_csv('/content/drive/MyDrive/Thesis/X_train.csv')\n","y_train = pd.read_csv('/content/drive/MyDrive/Thesis/y_train.csv')\n"],"metadata":{"id":"32jTbzNKMj71"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_data = pd.read_csv('/content/drive/MyDrive/Thesis/part1_complete.csv')"],"metadata":{"id":"ZOahSO9mToq8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train.to_csv('/content/drive/MyDrive/Thesis/X_train.csv')"],"metadata":{"id":"ygNhnP2h3usJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train = X_train.drop(columns=['Unnamed: 0'])\n","y_train = y_train.drop(columns=['Unnamed: 0'])"],"metadata":{"id":"uY4NrperOma9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"pyBF7z-XPMid","executionInfo":{"status":"ok","timestamp":1715518566562,"user_tz":-120,"elapsed":825,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"d996b555-b4cb-4fe8-fa9a-386e712892d6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        pet_Cat  pet_Dog  pet_Rabbit  gender_Female  gender_Male  \\\n","0           0.0      1.0         0.0            0.0          1.0   \n","1           0.0      0.0         1.0            1.0          0.0   \n","2           0.0      1.0         0.0            1.0          0.0   \n","3           1.0      0.0         0.0            1.0          0.0   \n","4           0.0      1.0         0.0            1.0          0.0   \n","...         ...      ...         ...            ...          ...   \n","187998      0.0      1.0         0.0            1.0          0.0   \n","187999      1.0      0.0         0.0            0.0          1.0   \n","188000      1.0      0.0         0.0            0.0          1.0   \n","188001      0.0      1.0         0.0            0.0          1.0   \n","188002      0.0      1.0         0.0            0.0          1.0   \n","\n","        gender_Mixed  color_Black  color_Black_White  color_Brown_Chocolate  \\\n","0                0.0          0.0                0.0                    0.0   \n","1                0.0          0.0                0.0                    0.0   \n","2                0.0          0.0                0.0                    0.0   \n","3                0.0          1.0                0.0                    0.0   \n","4                0.0          1.0                0.0                    0.0   \n","...              ...          ...                ...                    ...   \n","187998           0.0          0.0                0.0                    1.0   \n","187999           0.0          1.0                0.0                    0.0   \n","188000           0.0          0.0                0.0                    0.0   \n","188001           0.0          0.0                0.0                    0.0   \n","188002           0.0          0.0                0.0                    0.0   \n","\n","        color_Golden  ...  vector_92  vector_93  vector_94  vector_95  \\\n","0                0.0  ...   0.180516   0.013883  -0.001330   0.045363   \n","1                0.0  ...   0.119808   0.110728   0.031900  -0.066685   \n","2                0.0  ...   0.178771  -0.001800   0.087998   0.080699   \n","3                0.0  ...   0.083621   0.131444   0.074253   0.004763   \n","4                0.0  ...   0.268244   0.253771   0.169772  -0.035420   \n","...              ...  ...        ...        ...        ...        ...   \n","187998           0.0  ...   0.121363   0.033949   0.022230   0.020642   \n","187999           0.0  ...   0.109797   0.125821   0.097630  -0.036324   \n","188000           0.0  ...  -0.240101   0.371879  -0.372603  -0.341499   \n","188001           0.0  ...   0.073524   0.177094   0.053589   0.146463   \n","188002           0.0  ...  -0.197304   0.279939  -0.044929   0.052943   \n","\n","        vector_96  vector_97  vector_98  vector_99  age_encoded  size_encoded  \n","0       -0.045154  -0.120753   0.029061   0.160477          0.0           1.0  \n","1        0.088478   0.060564  -0.138984   0.287138          0.0           3.0  \n","2        0.137319   0.013934  -0.265653   0.318983          0.0           1.0  \n","3        0.194044   0.089118   0.034386   0.392149          1.0           2.0  \n","4        0.186678   0.067319  -0.240549   0.531007          1.0           2.0  \n","...           ...        ...        ...        ...          ...           ...  \n","187998   0.102412   0.051699  -0.163198   0.198205          0.0           2.0  \n","187999   0.053149   0.037388  -0.281548   0.237170          3.0           2.0  \n","188000  -0.475661   0.138415   0.051634   0.285470          1.0           2.0  \n","188001   0.061074   0.047811  -0.037875   0.224391          1.0           1.0  \n","188002   0.245215   0.201531  -0.090880   0.693550          0.0           1.0  \n","\n","[188003 rows x 118 columns]"],"text/html":["\n","  <div id=\"df-11bbb0f3-3310-4b90-ad60-a7c2c0b6cd26\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pet_Cat</th>\n","      <th>pet_Dog</th>\n","      <th>pet_Rabbit</th>\n","      <th>gender_Female</th>\n","      <th>gender_Male</th>\n","      <th>gender_Mixed</th>\n","      <th>color_Black</th>\n","      <th>color_Black_White</th>\n","      <th>color_Brown_Chocolate</th>\n","      <th>color_Golden</th>\n","      <th>...</th>\n","      <th>vector_92</th>\n","      <th>vector_93</th>\n","      <th>vector_94</th>\n","      <th>vector_95</th>\n","      <th>vector_96</th>\n","      <th>vector_97</th>\n","      <th>vector_98</th>\n","      <th>vector_99</th>\n","      <th>age_encoded</th>\n","      <th>size_encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.180516</td>\n","      <td>0.013883</td>\n","      <td>-0.001330</td>\n","      <td>0.045363</td>\n","      <td>-0.045154</td>\n","      <td>-0.120753</td>\n","      <td>0.029061</td>\n","      <td>0.160477</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.119808</td>\n","      <td>0.110728</td>\n","      <td>0.031900</td>\n","      <td>-0.066685</td>\n","      <td>0.088478</td>\n","      <td>0.060564</td>\n","      <td>-0.138984</td>\n","      <td>0.287138</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.178771</td>\n","      <td>-0.001800</td>\n","      <td>0.087998</td>\n","      <td>0.080699</td>\n","      <td>0.137319</td>\n","      <td>0.013934</td>\n","      <td>-0.265653</td>\n","      <td>0.318983</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.083621</td>\n","      <td>0.131444</td>\n","      <td>0.074253</td>\n","      <td>0.004763</td>\n","      <td>0.194044</td>\n","      <td>0.089118</td>\n","      <td>0.034386</td>\n","      <td>0.392149</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.268244</td>\n","      <td>0.253771</td>\n","      <td>0.169772</td>\n","      <td>-0.035420</td>\n","      <td>0.186678</td>\n","      <td>0.067319</td>\n","      <td>-0.240549</td>\n","      <td>0.531007</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>187998</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.121363</td>\n","      <td>0.033949</td>\n","      <td>0.022230</td>\n","      <td>0.020642</td>\n","      <td>0.102412</td>\n","      <td>0.051699</td>\n","      <td>-0.163198</td>\n","      <td>0.198205</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>187999</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.109797</td>\n","      <td>0.125821</td>\n","      <td>0.097630</td>\n","      <td>-0.036324</td>\n","      <td>0.053149</td>\n","      <td>0.037388</td>\n","      <td>-0.281548</td>\n","      <td>0.237170</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>188000</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>-0.240101</td>\n","      <td>0.371879</td>\n","      <td>-0.372603</td>\n","      <td>-0.341499</td>\n","      <td>-0.475661</td>\n","      <td>0.138415</td>\n","      <td>0.051634</td>\n","      <td>0.285470</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>188001</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.073524</td>\n","      <td>0.177094</td>\n","      <td>0.053589</td>\n","      <td>0.146463</td>\n","      <td>0.061074</td>\n","      <td>0.047811</td>\n","      <td>-0.037875</td>\n","      <td>0.224391</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>188002</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>-0.197304</td>\n","      <td>0.279939</td>\n","      <td>-0.044929</td>\n","      <td>0.052943</td>\n","      <td>0.245215</td>\n","      <td>0.201531</td>\n","      <td>-0.090880</td>\n","      <td>0.693550</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>188003 rows × 118 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11bbb0f3-3310-4b90-ad60-a7c2c0b6cd26')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-11bbb0f3-3310-4b90-ad60-a7c2c0b6cd26 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-11bbb0f3-3310-4b90-ad60-a7c2c0b6cd26');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-92772403-047a-477b-9197-86f52df920bd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-92772403-047a-477b-9197-86f52df920bd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-92772403-047a-477b-9197-86f52df920bd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train"}},"metadata":{},"execution_count":145}]},{"cell_type":"code","source":["y_test = new_data['adopted']"],"metadata":{"id":"FU-Qf7ezOt1u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["og_X_test = new_data.drop(columns = ['Unnamed: 0', 'pid', 'adopted', 'description_y', 'rewritten_description'])\n","rw_X_test = new_data[['pet', 'age', 'gender', 'color', 'size', 'photos', 'rewritten_description']]"],"metadata":{"id":"M77U6O8GPClg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Cleaning rewritten descriptions"],"metadata":{"id":"_-tGaD39QpeC"}},{"cell_type":"code","source":["# code retrieved from: https://monkeylearn.com/blog/text-cleaning/\n","# making all texts lowercase, removing all links & stopwords, lemmatizing\n","\n","rw_X_test['rewritten_description'] = rw_X_test['rewritten_description'].str.lower()\n","rw_X_test['rewritten_description'] = rw_X_test['rewritten_description'].str.replace(r\"(@\\[A-Za-z0-9]+)|([^0-9A-Za-z \\t])|(\\w+:\\/\\/\\S+)|^rt|http.+?\", \"\", regex=True)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BNgXBY_4QuFA","executionInfo":{"status":"ok","timestamp":1715515589420,"user_tz":-120,"elapsed":949,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"4d4bd212-f596-4fef-ad7d-0d214fe821c0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-99-8881747f6fa6>:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  rw_X_test['rewritten_description'] = rw_X_test['rewritten_description'].str.lower()\n","<ipython-input-99-8881747f6fa6>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  rw_X_test['rewritten_description'] = rw_X_test['rewritten_description'].str.replace(r\"(@\\[A-Za-z0-9]+)|([^0-9A-Za-z \\t])|(\\w+:\\/\\/\\S+)|^rt|http.+?\", \"\", regex=True)\n"]}]},{"cell_type":"code","source":["import nltk\n","nltk.download('stopwords')\n","\n","stop = stopwords.words('english')\n","\n","def remove_stopwords(text):\n","    if pd.isna(text):\n","        return \"\"\n","    return ' '.join([word for word in str(text).split() if word not in stop])\n","\n","rw_X_test['rewritten_description'] = rw_X_test['rewritten_description'].apply(remove_stopwords)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f6fxB2MYREIL","executionInfo":{"status":"ok","timestamp":1715515601821,"user_tz":-120,"elapsed":2422,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"63766353-2c93-484a-c3f1-6c82f77e55ae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n","<ipython-input-100-23878b700041>:11: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  rw_X_test['rewritten_description'] = rw_X_test['rewritten_description'].apply(remove_stopwords)\n"]}]},{"cell_type":"code","source":["nltk.download('wordnet')\n","nltk.download('omw-1.4')\n","\n","lemmatizer = WordNetLemmatizer()\n","\n","def lemmatize_text(text):\n","    if pd.isna(text):\n","        return \"\"\n","    return ' '.join([lemmatizer.lemmatize(word) for word in text.split()])\n","\n","rw_X_test['rewritten_description'] = rw_X_test['rewritten_description'].apply(lemmatize_text)\n","rw_X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":597},"id":"zagLTRqnRe8-","executionInfo":{"status":"ok","timestamp":1715515602427,"user_tz":-120,"elapsed":611,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"b6a9f009-50f1-474b-ecb2-889210290ef3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data]   Package wordnet is already up-to-date!\n","[nltk_data] Downloading package omw-1.4 to /root/nltk_data...\n","[nltk_data]   Package omw-1.4 is already up-to-date!\n","<ipython-input-101-baa491917c85>:11: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  rw_X_test['rewritten_description'] = rw_X_test['rewritten_description'].apply(lemmatize_text)\n"]},{"output_type":"execute_result","data":{"text/plain":["      pet     age  gender            color    size  photos  \\\n","0     Dog  Senior    Male      White_Cream   Small       1   \n","1     Dog   Young    Male          Unknown  Medium       3   \n","2     Cat  Senior  Female      Black_White  Medium       1   \n","3     Dog   Adult    Male            Other   Small       1   \n","4     Dog   Adult    Male             Gray   Large       6   \n","...   ...     ...     ...              ...     ...     ...   \n","7969  Dog  Senior  Female  Brown_Chocolate   Small       3   \n","7970  Cat    Baby  Female  Brown_Chocolate  Medium       2   \n","7971  Dog  Senior  Female      White_Cream   Large       3   \n","7972  Cat   Adult  Female          Unknown   Small       1   \n","7973  Dog    Baby    Male            Black   Large       1   \n","\n","                                  rewritten_description  \n","0     brawny 8yearold male maltipoo ready new foreve...  \n","1     meet finnick sensitive shy pup search patient ...  \n","2     sweet cat looking forever home adoption fee 55...  \n","3     felix tiny 18monthold chihuahua weighing 9 lb ...  \n","4     vadar twoyearold handsome boy love going walk ...  \n","...                                                 ...  \n","7969  kahlua spunky smart senior dog love play fetch...  \n","7970  chaii stunning 10weekold kitten sweet beautifu...  \n","7971  panda serene great pyrenees looking calm lovin...  \n","7972  abigail sweet affectionate cat love held aroun...  \n","7973  nemo playful resilient puppy overcome tough st...  \n","\n","[7974 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-0e900b74-5acf-48a4-8246-4ba7c71eeadc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pet</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>color</th>\n","      <th>size</th>\n","      <th>photos</th>\n","      <th>rewritten_description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Male</td>\n","      <td>White_Cream</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>brawny 8yearold male maltipoo ready new foreve...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Unknown</td>\n","      <td>Medium</td>\n","      <td>3</td>\n","      <td>meet finnick sensitive shy pup search patient ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Cat</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>Black_White</td>\n","      <td>Medium</td>\n","      <td>1</td>\n","      <td>sweet cat looking forever home adoption fee 55...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Other</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>felix tiny 18monthold chihuahua weighing 9 lb ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Gray</td>\n","      <td>Large</td>\n","      <td>6</td>\n","      <td>vadar twoyearold handsome boy love going walk ...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7969</th>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>Brown_Chocolate</td>\n","      <td>Small</td>\n","      <td>3</td>\n","      <td>kahlua spunky smart senior dog love play fetch...</td>\n","    </tr>\n","    <tr>\n","      <th>7970</th>\n","      <td>Cat</td>\n","      <td>Baby</td>\n","      <td>Female</td>\n","      <td>Brown_Chocolate</td>\n","      <td>Medium</td>\n","      <td>2</td>\n","      <td>chaii stunning 10weekold kitten sweet beautifu...</td>\n","    </tr>\n","    <tr>\n","      <th>7971</th>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>White_Cream</td>\n","      <td>Large</td>\n","      <td>3</td>\n","      <td>panda serene great pyrenees looking calm lovin...</td>\n","    </tr>\n","    <tr>\n","      <th>7972</th>\n","      <td>Cat</td>\n","      <td>Adult</td>\n","      <td>Female</td>\n","      <td>Unknown</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>abigail sweet affectionate cat love held aroun...</td>\n","    </tr>\n","    <tr>\n","      <th>7973</th>\n","      <td>Dog</td>\n","      <td>Baby</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Large</td>\n","      <td>1</td>\n","      <td>nemo playful resilient puppy overcome tough st...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7974 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e900b74-5acf-48a4-8246-4ba7c71eeadc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0e900b74-5acf-48a4-8246-4ba7c71eeadc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0e900b74-5acf-48a4-8246-4ba7c71eeadc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-104838ed-ce54-4342-a2de-d244a8049062\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-104838ed-ce54-4342-a2de-d244a8049062')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-104838ed-ce54-4342-a2de-d244a8049062 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"rw_X_test","summary":"{\n  \"name\": \"rw_X_test\",\n  \"rows\": 7974,\n  \"fields\": [\n    {\n      \"column\": \"pet\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Dog\",\n          \"Cat\",\n          \"Rabbit\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Young\",\n          \"Baby\",\n          \"Senior\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Male\",\n          \"Female\",\n          \"Mixed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"color\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Yellow\",\n          \"Unknown\",\n          \"Black\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Medium\",\n          \"Extra Large\",\n          \"Small\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"photos\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          3,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rewritten_description\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7973,\n        \"samples\": [\n          \"two sweet girl need hero tipsi maddie 6 year old full love people found crowded shelter family lost home great child cat tipsi enjoys company size dog maddie prefers bigger dog girl urgent need foster home avoid euthanasia lifesaver contact shelter link provided help give tipsi maddie second chance loving home\",\n          \"kennedy delicate affectionate cat adores receiving neck chin scratch may found outside quickly showed love people socializing cat kennedy looking forever home continue thrive attention companionship youre ready open heart sweet feline kennedy eagerly waiting welcomed new family\",\n          \"meet raisin young mellow gal ready warm heart home calming presence love relaxation enjoys cozy spot watch world go raisin always nice pet listening story would make wonderful lifelong companion treat playtime lot love dont wait longer bring raisin home today start making memory together\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["#tokenizing the newly generated descriptions with the trained doc2vec model\n","\n","pet_dataset = pd.read_csv('/content/drive/MyDrive/Thesis/pet_feateng1.csv', dtype={'description': str}, low_memory=False)\n","\n","pet_dataset['description'] = pet_dataset['description'].fillna('')\n","pet_dataset['description'] = pet_dataset['description'].astype(str)\n","\n","# code retrieved from: https://stackoverflow.com/questions/45125798/how-to-use-taggeddocument-in-gensim & https://radimrehurek.com/gensim/models/doc2vec.html#gensim.models.doc2vec.Doc2Vec\n","\n","nltk.download('punkt')\n","\n","documents = [TaggedDocument(words=word_tokenize(doc), tags=[str(i)]) for i, doc in enumerate(pet_dataset['description'])]\n","\n","model = Doc2Vec(vector_size=100, seed=555)\n","model.build_vocab(documents)\n","model.train(documents, total_examples=model.corpus_count, epochs=model.epochs)\n","\n","model.save(\"/content/drive/MyDrive/Thesis/doc2vec.model\")\n","\n","new_vectors = [model.infer_vector(word_tokenize(doc.lower())) for doc in rw_X_test['rewritten_description']]\n","\n","vector_df = pd.DataFrame(new_vectors)\n","vector_df.columns = [f'vector_{i}' for i in range(vector_df.shape[1])]\n","\n","rw2_X_test = pd.concat([rw_X_test.reset_index(drop=True), vector_df.reset_index(drop=True)], axis=1)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ohKlinfvp9Vl","executionInfo":{"status":"ok","timestamp":1715516008857,"user_tz":-120,"elapsed":292349,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"f9347329-052d-458d-884a-e2a5258e926a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"]}]},{"cell_type":"code","source":["rw2_X_test = rw2_X_test.drop(columns= ['rewritten_description'])\n","rw2_X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"G6c590pqSZlT","executionInfo":{"status":"ok","timestamp":1715516018949,"user_tz":-120,"elapsed":370,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"1ffa438f-d251-4aae-fd06-a5ab241a8689"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      pet     age  gender            color    size  photos  vector_0  \\\n","0     Dog  Senior    Male      White_Cream   Small       1  0.248611   \n","1     Dog   Young    Male          Unknown  Medium       3  0.279130   \n","2     Cat  Senior  Female      Black_White  Medium       1 -0.081264   \n","3     Dog   Adult    Male            Other   Small       1  0.285721   \n","4     Dog   Adult    Male             Gray   Large       6 -0.104635   \n","...   ...     ...     ...              ...     ...     ...       ...   \n","7969  Dog  Senior  Female  Brown_Chocolate   Small       3  0.209779   \n","7970  Cat    Baby  Female  Brown_Chocolate  Medium       2  0.021223   \n","7971  Dog  Senior  Female      White_Cream   Large       3  0.114014   \n","7972  Cat   Adult  Female          Unknown   Small       1  0.137311   \n","7973  Dog    Baby    Male            Black   Large       1 -0.008360   \n","\n","      vector_1  vector_2  vector_3  ...  vector_90  vector_91  vector_92  \\\n","0     0.326382 -0.299888 -0.251811  ...  -0.247072   0.190189   0.155524   \n","1     0.253376 -0.289172 -0.238459  ...  -0.010863   0.103695   0.114626   \n","2     0.017133 -0.252834 -0.224773  ...   0.077255  -0.043077  -0.070270   \n","3     0.549000  0.098666 -0.134244  ...   0.243827  -0.082461   0.035308   \n","4     0.121948 -0.186876 -0.186518  ...   0.082036   0.008526   0.143910   \n","...        ...       ...       ...  ...        ...        ...        ...   \n","7969  0.304065 -0.241039 -0.230539  ...  -0.098778  -0.005296  -0.046584   \n","7970  0.272543 -0.101476 -0.204949  ...   0.071496   0.220422  -0.072600   \n","7971  0.164227 -0.179731  0.021021  ...  -0.096304   0.092298  -0.138164   \n","7972  0.312252 -0.136941 -0.054072  ...   0.247564   0.056429  -0.147400   \n","7973  0.199515 -0.170312 -0.343365  ...   0.161945   0.159797  -0.117978   \n","\n","      vector_93  vector_94  vector_95  vector_96  vector_97  vector_98  \\\n","0      0.049673   0.266224  -0.025897   0.285195   0.132317  -0.284784   \n","1      0.032034   0.164107   0.053873   0.246813  -0.020053  -0.095652   \n","2      0.123994   0.118126   0.156004   0.125877   0.037714   0.102553   \n","3      0.003289   0.308854   0.137232   0.304505  -0.086967  -0.229572   \n","4     -0.024513   0.223837   0.082466   0.073994   0.114810  -0.199204   \n","...         ...        ...        ...        ...        ...        ...   \n","7969  -0.184834  -0.163582   0.017430   0.250148  -0.071253  -0.245600   \n","7970   0.084162   0.241388   0.202448   0.160773   0.079874   0.029208   \n","7971  -0.172581   0.229482   0.024288   0.197273  -0.168873  -0.288752   \n","7972   0.110404   0.044233   0.157919   0.309270   0.084485  -0.109108   \n","7973  -0.036375   0.184191   0.140843   0.069548   0.072092  -0.022639   \n","\n","      vector_99  \n","0      0.297327  \n","1      0.163871  \n","2     -0.130906  \n","3      0.262549  \n","4      0.221928  \n","...         ...  \n","7969   0.048035  \n","7970   0.215043  \n","7971   0.102135  \n","7972   0.013477  \n","7973   0.175640  \n","\n","[7974 rows x 106 columns]"],"text/html":["\n","  <div id=\"df-a754fbf9-d472-4883-ab97-0246b2af2066\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pet</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>color</th>\n","      <th>size</th>\n","      <th>photos</th>\n","      <th>vector_0</th>\n","      <th>vector_1</th>\n","      <th>vector_2</th>\n","      <th>vector_3</th>\n","      <th>...</th>\n","      <th>vector_90</th>\n","      <th>vector_91</th>\n","      <th>vector_92</th>\n","      <th>vector_93</th>\n","      <th>vector_94</th>\n","      <th>vector_95</th>\n","      <th>vector_96</th>\n","      <th>vector_97</th>\n","      <th>vector_98</th>\n","      <th>vector_99</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Male</td>\n","      <td>White_Cream</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.248611</td>\n","      <td>0.326382</td>\n","      <td>-0.299888</td>\n","      <td>-0.251811</td>\n","      <td>...</td>\n","      <td>-0.247072</td>\n","      <td>0.190189</td>\n","      <td>0.155524</td>\n","      <td>0.049673</td>\n","      <td>0.266224</td>\n","      <td>-0.025897</td>\n","      <td>0.285195</td>\n","      <td>0.132317</td>\n","      <td>-0.284784</td>\n","      <td>0.297327</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Unknown</td>\n","      <td>Medium</td>\n","      <td>3</td>\n","      <td>0.279130</td>\n","      <td>0.253376</td>\n","      <td>-0.289172</td>\n","      <td>-0.238459</td>\n","      <td>...</td>\n","      <td>-0.010863</td>\n","      <td>0.103695</td>\n","      <td>0.114626</td>\n","      <td>0.032034</td>\n","      <td>0.164107</td>\n","      <td>0.053873</td>\n","      <td>0.246813</td>\n","      <td>-0.020053</td>\n","      <td>-0.095652</td>\n","      <td>0.163871</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Cat</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>Black_White</td>\n","      <td>Medium</td>\n","      <td>1</td>\n","      <td>-0.081264</td>\n","      <td>0.017133</td>\n","      <td>-0.252834</td>\n","      <td>-0.224773</td>\n","      <td>...</td>\n","      <td>0.077255</td>\n","      <td>-0.043077</td>\n","      <td>-0.070270</td>\n","      <td>0.123994</td>\n","      <td>0.118126</td>\n","      <td>0.156004</td>\n","      <td>0.125877</td>\n","      <td>0.037714</td>\n","      <td>0.102553</td>\n","      <td>-0.130906</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Other</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.285721</td>\n","      <td>0.549000</td>\n","      <td>0.098666</td>\n","      <td>-0.134244</td>\n","      <td>...</td>\n","      <td>0.243827</td>\n","      <td>-0.082461</td>\n","      <td>0.035308</td>\n","      <td>0.003289</td>\n","      <td>0.308854</td>\n","      <td>0.137232</td>\n","      <td>0.304505</td>\n","      <td>-0.086967</td>\n","      <td>-0.229572</td>\n","      <td>0.262549</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Gray</td>\n","      <td>Large</td>\n","      <td>6</td>\n","      <td>-0.104635</td>\n","      <td>0.121948</td>\n","      <td>-0.186876</td>\n","      <td>-0.186518</td>\n","      <td>...</td>\n","      <td>0.082036</td>\n","      <td>0.008526</td>\n","      <td>0.143910</td>\n","      <td>-0.024513</td>\n","      <td>0.223837</td>\n","      <td>0.082466</td>\n","      <td>0.073994</td>\n","      <td>0.114810</td>\n","      <td>-0.199204</td>\n","      <td>0.221928</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7969</th>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>Brown_Chocolate</td>\n","      <td>Small</td>\n","      <td>3</td>\n","      <td>0.209779</td>\n","      <td>0.304065</td>\n","      <td>-0.241039</td>\n","      <td>-0.230539</td>\n","      <td>...</td>\n","      <td>-0.098778</td>\n","      <td>-0.005296</td>\n","      <td>-0.046584</td>\n","      <td>-0.184834</td>\n","      <td>-0.163582</td>\n","      <td>0.017430</td>\n","      <td>0.250148</td>\n","      <td>-0.071253</td>\n","      <td>-0.245600</td>\n","      <td>0.048035</td>\n","    </tr>\n","    <tr>\n","      <th>7970</th>\n","      <td>Cat</td>\n","      <td>Baby</td>\n","      <td>Female</td>\n","      <td>Brown_Chocolate</td>\n","      <td>Medium</td>\n","      <td>2</td>\n","      <td>0.021223</td>\n","      <td>0.272543</td>\n","      <td>-0.101476</td>\n","      <td>-0.204949</td>\n","      <td>...</td>\n","      <td>0.071496</td>\n","      <td>0.220422</td>\n","      <td>-0.072600</td>\n","      <td>0.084162</td>\n","      <td>0.241388</td>\n","      <td>0.202448</td>\n","      <td>0.160773</td>\n","      <td>0.079874</td>\n","      <td>0.029208</td>\n","      <td>0.215043</td>\n","    </tr>\n","    <tr>\n","      <th>7971</th>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>White_Cream</td>\n","      <td>Large</td>\n","      <td>3</td>\n","      <td>0.114014</td>\n","      <td>0.164227</td>\n","      <td>-0.179731</td>\n","      <td>0.021021</td>\n","      <td>...</td>\n","      <td>-0.096304</td>\n","      <td>0.092298</td>\n","      <td>-0.138164</td>\n","      <td>-0.172581</td>\n","      <td>0.229482</td>\n","      <td>0.024288</td>\n","      <td>0.197273</td>\n","      <td>-0.168873</td>\n","      <td>-0.288752</td>\n","      <td>0.102135</td>\n","    </tr>\n","    <tr>\n","      <th>7972</th>\n","      <td>Cat</td>\n","      <td>Adult</td>\n","      <td>Female</td>\n","      <td>Unknown</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.137311</td>\n","      <td>0.312252</td>\n","      <td>-0.136941</td>\n","      <td>-0.054072</td>\n","      <td>...</td>\n","      <td>0.247564</td>\n","      <td>0.056429</td>\n","      <td>-0.147400</td>\n","      <td>0.110404</td>\n","      <td>0.044233</td>\n","      <td>0.157919</td>\n","      <td>0.309270</td>\n","      <td>0.084485</td>\n","      <td>-0.109108</td>\n","      <td>0.013477</td>\n","    </tr>\n","    <tr>\n","      <th>7973</th>\n","      <td>Dog</td>\n","      <td>Baby</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Large</td>\n","      <td>1</td>\n","      <td>-0.008360</td>\n","      <td>0.199515</td>\n","      <td>-0.170312</td>\n","      <td>-0.343365</td>\n","      <td>...</td>\n","      <td>0.161945</td>\n","      <td>0.159797</td>\n","      <td>-0.117978</td>\n","      <td>-0.036375</td>\n","      <td>0.184191</td>\n","      <td>0.140843</td>\n","      <td>0.069548</td>\n","      <td>0.072092</td>\n","      <td>-0.022639</td>\n","      <td>0.175640</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7974 rows × 106 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a754fbf9-d472-4883-ab97-0246b2af2066')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a754fbf9-d472-4883-ab97-0246b2af2066 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a754fbf9-d472-4883-ab97-0246b2af2066');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1d1becb7-4d69-4157-bfac-711217c73756\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d1becb7-4d69-4157-bfac-711217c73756')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1d1becb7-4d69-4157-bfac-711217c73756 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"rw2_X_test"}},"metadata":{},"execution_count":105}]},{"cell_type":"code","source":["#encoding the categorical variables\n","\n","label_encoder = LabelEncoder()\n","\n","y_test['adopted_encoded'] = label_encoder.fit_transform(y_test)\n","\n","y_test['adopted_encoded'] = np.where(y_test['adopted_encoded'] == 0, 1, 0)\n","\n","y_train['adopted_encoded'] = label_encoder.fit_transform(y_train)\n","\n","y_train['adopted_encoded'] = np.where(y_train['adopted_encoded'] == 0, 1, 0)\n","\n","y_test = y_test.drop(columns=['adopted'])\n","y_train = y_train.drop(columns=['adopted'])\n","\n","y_test = y_test['adopted_encoded']\n","y_train = y_train['adopted_encoded']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jzF7OuBFSkwJ","executionInfo":{"status":"ok","timestamp":1715516033745,"user_tz":-120,"elapsed":4,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"4a4efb61-bd23-4885-f3b1-8d8810cf85be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-107-d6796002fd43>:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  y_test['adopted_encoded'] = label_encoder.fit_transform(y_test)\n","/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_label.py:116: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]}]},{"cell_type":"code","source":["y_train= y_train.to_numpy()\n","y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s58cfEJGSxCm","executionInfo":{"status":"ok","timestamp":1715516035673,"user_tz":-120,"elapsed":651,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"db6a893c-8f51-4586-9e90-96ba6dbe729a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 1, ..., 0, 1, 0])"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["label_encoder = LabelEncoder()\n","\n","\n","y_test['adopted_encoded'] = label_encoder.fit_transform(y_test)\n","\n","y_test['adopted_encoded'] = np.where(y_test['adopted_encoded'] == 0, 1, 0)\n","\n","y_test = y_test.drop(columns=['adopted'])\n","y_test = y_test['adopted_encoded']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v5WtJqSBGB-d","executionInfo":{"status":"ok","timestamp":1715522291847,"user_tz":-120,"elapsed":501,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"76a66e9c-e9f8-4fc0-9773-727562eedcd8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-9-2438ac456781>:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  y_test['adopted_encoded'] = label_encoder.fit_transform(y_test)\n"]}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L3i9wJCVUJYV","executionInfo":{"status":"ok","timestamp":1715522294861,"user_tz":-120,"elapsed":669,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"1bf42b1e-4bb3-447c-d8e1-4efe16a90317"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 0, 1, ..., 0, 1, 1])"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["ordinal_encoder = OrdinalEncoder()\n","\n","X_train['age_encoded'] = ordinal_encoder.fit_transform(X_train[['age']])\n","X_train['size_encoded'] = ordinal_encoder.fit_transform(X_train[['size']])\n","\n","X_train = X_train.drop(['age', 'size'], axis=1)"],"metadata":{"id":"2fDxHeOmeVry"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ordinal_encoder = OrdinalEncoder()\n","\n","og_X_test['age_encoded'] = ordinal_encoder.fit_transform(og_X_test[['age']])\n","og_X_test['size_encoded'] = ordinal_encoder.fit_transform(og_X_test[['size']])\n","\n","og_X_test = og_X_test.drop(['age', 'size'], axis=1)"],"metadata":{"id":"YoT47j35UNg0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ordinal_encoder = OrdinalEncoder()\n","\n","rw2_X_test['age_encoded'] = ordinal_encoder.fit_transform(rw2_X_test[['age']])\n","rw2_X_test['size_encoded'] = ordinal_encoder.fit_transform(rw2_X_test[['size']])\n","\n","rw2_X_test = rw2_X_test.drop(['age', 'size'], axis=1)"],"metadata":{"id":"r5yd-FEMeTnL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# code from: https://datascience.stackexchange.com/questions/71804/how-to-perform-one-hot-encoding-on-multiple-categorical-columns\n","\n","ohe = OneHotEncoder(sparse_output=False)\n","\n","Xtrain_encoded = ohe.fit_transform(X_train[['pet', 'gender', 'color']])\n","\n","X_train_encoded = pd.DataFrame(Xtrain_encoded, columns=ohe.get_feature_names_out(['pet', 'gender', 'color']))\n","\n","data_other_cols = X_train.drop(columns=['pet', 'gender', 'color'])\n","\n","X_train = pd.concat([X_train_encoded, data_other_cols], axis=1)\n"],"metadata":{"id":"eQBxAnPCerrU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"0hUyjrg9ewaH","executionInfo":{"status":"ok","timestamp":1715516042340,"user_tz":-120,"elapsed":7,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"ff86058a-ea21-49cb-c158-328c0001bddc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        pet_Cat  pet_Dog  pet_Rabbit  gender_Female  gender_Male  \\\n","0           0.0      1.0         0.0            0.0          1.0   \n","1           0.0      0.0         1.0            1.0          0.0   \n","2           0.0      1.0         0.0            1.0          0.0   \n","3           1.0      0.0         0.0            1.0          0.0   \n","4           0.0      1.0         0.0            1.0          0.0   \n","...         ...      ...         ...            ...          ...   \n","187998      0.0      1.0         0.0            1.0          0.0   \n","187999      1.0      0.0         0.0            0.0          1.0   \n","188000      1.0      0.0         0.0            0.0          1.0   \n","188001      0.0      1.0         0.0            0.0          1.0   \n","188002      0.0      1.0         0.0            0.0          1.0   \n","\n","        gender_Mixed  gender_Unknown  color_Black  color_Black_White  \\\n","0                0.0             0.0          0.0                0.0   \n","1                0.0             0.0          0.0                0.0   \n","2                0.0             0.0          0.0                0.0   \n","3                0.0             0.0          1.0                0.0   \n","4                0.0             0.0          1.0                0.0   \n","...              ...             ...          ...                ...   \n","187998           0.0             0.0          0.0                0.0   \n","187999           0.0             0.0          1.0                0.0   \n","188000           0.0             0.0          0.0                0.0   \n","188001           0.0             0.0          0.0                0.0   \n","188002           0.0             0.0          0.0                0.0   \n","\n","        color_Brown_Chocolate  ...  vector_92  vector_93  vector_94  \\\n","0                         0.0  ...   0.180516   0.013883  -0.001330   \n","1                         0.0  ...   0.119808   0.110728   0.031900   \n","2                         0.0  ...   0.178771  -0.001800   0.087998   \n","3                         0.0  ...   0.083621   0.131444   0.074253   \n","4                         0.0  ...   0.268244   0.253771   0.169772   \n","...                       ...  ...        ...        ...        ...   \n","187998                    1.0  ...   0.121363   0.033949   0.022230   \n","187999                    0.0  ...   0.109797   0.125821   0.097630   \n","188000                    0.0  ...  -0.240101   0.371879  -0.372603   \n","188001                    0.0  ...   0.073524   0.177094   0.053589   \n","188002                    0.0  ...  -0.197304   0.279939  -0.044929   \n","\n","        vector_95  vector_96  vector_97  vector_98  vector_99  age_encoded  \\\n","0        0.045363  -0.045154  -0.120753   0.029061   0.160477          0.0   \n","1       -0.066685   0.088478   0.060564  -0.138984   0.287138          0.0   \n","2        0.080699   0.137319   0.013934  -0.265653   0.318983          0.0   \n","3        0.004763   0.194044   0.089118   0.034386   0.392149          1.0   \n","4       -0.035420   0.186678   0.067319  -0.240549   0.531007          1.0   \n","...           ...        ...        ...        ...        ...          ...   \n","187998   0.020642   0.102412   0.051699  -0.163198   0.198205          0.0   \n","187999  -0.036324   0.053149   0.037388  -0.281548   0.237170          3.0   \n","188000  -0.341499  -0.475661   0.138415   0.051634   0.285470          1.0   \n","188001   0.146463   0.061074   0.047811  -0.037875   0.224391          1.0   \n","188002   0.052943   0.245215   0.201531  -0.090880   0.693550          0.0   \n","\n","        size_encoded  \n","0                1.0  \n","1                3.0  \n","2                1.0  \n","3                2.0  \n","4                2.0  \n","...              ...  \n","187998           2.0  \n","187999           2.0  \n","188000           2.0  \n","188001           1.0  \n","188002           1.0  \n","\n","[188003 rows x 119 columns]"],"text/html":["\n","  <div id=\"df-1b53b17e-de2d-4b8b-a4f6-95c83801c76e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pet_Cat</th>\n","      <th>pet_Dog</th>\n","      <th>pet_Rabbit</th>\n","      <th>gender_Female</th>\n","      <th>gender_Male</th>\n","      <th>gender_Mixed</th>\n","      <th>gender_Unknown</th>\n","      <th>color_Black</th>\n","      <th>color_Black_White</th>\n","      <th>color_Brown_Chocolate</th>\n","      <th>...</th>\n","      <th>vector_92</th>\n","      <th>vector_93</th>\n","      <th>vector_94</th>\n","      <th>vector_95</th>\n","      <th>vector_96</th>\n","      <th>vector_97</th>\n","      <th>vector_98</th>\n","      <th>vector_99</th>\n","      <th>age_encoded</th>\n","      <th>size_encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.180516</td>\n","      <td>0.013883</td>\n","      <td>-0.001330</td>\n","      <td>0.045363</td>\n","      <td>-0.045154</td>\n","      <td>-0.120753</td>\n","      <td>0.029061</td>\n","      <td>0.160477</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.119808</td>\n","      <td>0.110728</td>\n","      <td>0.031900</td>\n","      <td>-0.066685</td>\n","      <td>0.088478</td>\n","      <td>0.060564</td>\n","      <td>-0.138984</td>\n","      <td>0.287138</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.178771</td>\n","      <td>-0.001800</td>\n","      <td>0.087998</td>\n","      <td>0.080699</td>\n","      <td>0.137319</td>\n","      <td>0.013934</td>\n","      <td>-0.265653</td>\n","      <td>0.318983</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.083621</td>\n","      <td>0.131444</td>\n","      <td>0.074253</td>\n","      <td>0.004763</td>\n","      <td>0.194044</td>\n","      <td>0.089118</td>\n","      <td>0.034386</td>\n","      <td>0.392149</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.268244</td>\n","      <td>0.253771</td>\n","      <td>0.169772</td>\n","      <td>-0.035420</td>\n","      <td>0.186678</td>\n","      <td>0.067319</td>\n","      <td>-0.240549</td>\n","      <td>0.531007</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>187998</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>0.121363</td>\n","      <td>0.033949</td>\n","      <td>0.022230</td>\n","      <td>0.020642</td>\n","      <td>0.102412</td>\n","      <td>0.051699</td>\n","      <td>-0.163198</td>\n","      <td>0.198205</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>187999</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.109797</td>\n","      <td>0.125821</td>\n","      <td>0.097630</td>\n","      <td>-0.036324</td>\n","      <td>0.053149</td>\n","      <td>0.037388</td>\n","      <td>-0.281548</td>\n","      <td>0.237170</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>188000</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>-0.240101</td>\n","      <td>0.371879</td>\n","      <td>-0.372603</td>\n","      <td>-0.341499</td>\n","      <td>-0.475661</td>\n","      <td>0.138415</td>\n","      <td>0.051634</td>\n","      <td>0.285470</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>188001</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.073524</td>\n","      <td>0.177094</td>\n","      <td>0.053589</td>\n","      <td>0.146463</td>\n","      <td>0.061074</td>\n","      <td>0.047811</td>\n","      <td>-0.037875</td>\n","      <td>0.224391</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>188002</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>-0.197304</td>\n","      <td>0.279939</td>\n","      <td>-0.044929</td>\n","      <td>0.052943</td>\n","      <td>0.245215</td>\n","      <td>0.201531</td>\n","      <td>-0.090880</td>\n","      <td>0.693550</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>188003 rows × 119 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b53b17e-de2d-4b8b-a4f6-95c83801c76e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1b53b17e-de2d-4b8b-a4f6-95c83801c76e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1b53b17e-de2d-4b8b-a4f6-95c83801c76e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-05af1a06-15b4-4f00-b8fa-1c966aea6858\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-05af1a06-15b4-4f00-b8fa-1c966aea6858')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-05af1a06-15b4-4f00-b8fa-1c966aea6858 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train"}},"metadata":{},"execution_count":114}]},{"cell_type":"code","source":["# code from: https://datascience.stackexchange.com/questions/71804/how-to-perform-one-hot-encoding-on-multiple-categorical-columns\n","\n","ohe = OneHotEncoder(sparse_output=False)\n","\n","oXtest_encoded = ohe.fit_transform(og_X_test[['pet', 'gender', 'color']])\n","\n","oX_test_encoded = pd.DataFrame(oXtest_encoded, columns=ohe.get_feature_names_out(['pet', 'gender', 'color']))\n","\n","data_other_cols = og_X_test.drop(columns=['pet', 'gender', 'color'])\n","\n","og_X_test = pd.concat([oX_test_encoded, data_other_cols], axis=1)"],"metadata":{"id":"2ugDRqorezhO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# code from: https://datascience.stackexchange.com/questions/71804/how-to-perform-one-hot-encoding-on-multiple-categorical-columns\n","\n","ohe = OneHotEncoder(sparse_output=False)\n","\n","rXtest_encoded = ohe.fit_transform(rw2_X_test[['pet', 'gender', 'color']])\n","\n","rX_test_encoded = pd.DataFrame(rXtest_encoded, columns=ohe.get_feature_names_out(['pet', 'gender', 'color']))\n","\n","data_other_cols = rw2_X_test.drop(columns=['pet', 'gender', 'color'])\n","\n","rw2_X_test = pd.concat([rX_test_encoded, data_other_cols], axis=1)"],"metadata":{"id":"M0HUy-T7fAtj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"mwPW7pXPfUGQ","executionInfo":{"status":"ok","timestamp":1715516048906,"user_tz":-120,"elapsed":8,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"f60a4a20-c5b3-4550-c4c7-ea07f4120bfd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        pet_Cat  pet_Dog  pet_Rabbit  gender_Female  gender_Male  \\\n","0           0.0      1.0         0.0            0.0          1.0   \n","1           0.0      0.0         1.0            1.0          0.0   \n","2           0.0      1.0         0.0            1.0          0.0   \n","3           1.0      0.0         0.0            1.0          0.0   \n","4           0.0      1.0         0.0            1.0          0.0   \n","...         ...      ...         ...            ...          ...   \n","187998      0.0      1.0         0.0            1.0          0.0   \n","187999      1.0      0.0         0.0            0.0          1.0   \n","188000      1.0      0.0         0.0            0.0          1.0   \n","188001      0.0      1.0         0.0            0.0          1.0   \n","188002      0.0      1.0         0.0            0.0          1.0   \n","\n","        gender_Mixed  gender_Unknown  color_Black  color_Black_White  \\\n","0                0.0             0.0          0.0                0.0   \n","1                0.0             0.0          0.0                0.0   \n","2                0.0             0.0          0.0                0.0   \n","3                0.0             0.0          1.0                0.0   \n","4                0.0             0.0          1.0                0.0   \n","...              ...             ...          ...                ...   \n","187998           0.0             0.0          0.0                0.0   \n","187999           0.0             0.0          1.0                0.0   \n","188000           0.0             0.0          0.0                0.0   \n","188001           0.0             0.0          0.0                0.0   \n","188002           0.0             0.0          0.0                0.0   \n","\n","        color_Brown_Chocolate  ...  vector_92  vector_93  vector_94  \\\n","0                         0.0  ...   0.180516   0.013883  -0.001330   \n","1                         0.0  ...   0.119808   0.110728   0.031900   \n","2                         0.0  ...   0.178771  -0.001800   0.087998   \n","3                         0.0  ...   0.083621   0.131444   0.074253   \n","4                         0.0  ...   0.268244   0.253771   0.169772   \n","...                       ...  ...        ...        ...        ...   \n","187998                    1.0  ...   0.121363   0.033949   0.022230   \n","187999                    0.0  ...   0.109797   0.125821   0.097630   \n","188000                    0.0  ...  -0.240101   0.371879  -0.372603   \n","188001                    0.0  ...   0.073524   0.177094   0.053589   \n","188002                    0.0  ...  -0.197304   0.279939  -0.044929   \n","\n","        vector_95  vector_96  vector_97  vector_98  vector_99  age_encoded  \\\n","0        0.045363  -0.045154  -0.120753   0.029061   0.160477          0.0   \n","1       -0.066685   0.088478   0.060564  -0.138984   0.287138          0.0   \n","2        0.080699   0.137319   0.013934  -0.265653   0.318983          0.0   \n","3        0.004763   0.194044   0.089118   0.034386   0.392149          1.0   \n","4       -0.035420   0.186678   0.067319  -0.240549   0.531007          1.0   \n","...           ...        ...        ...        ...        ...          ...   \n","187998   0.020642   0.102412   0.051699  -0.163198   0.198205          0.0   \n","187999  -0.036324   0.053149   0.037388  -0.281548   0.237170          3.0   \n","188000  -0.341499  -0.475661   0.138415   0.051634   0.285470          1.0   \n","188001   0.146463   0.061074   0.047811  -0.037875   0.224391          1.0   \n","188002   0.052943   0.245215   0.201531  -0.090880   0.693550          0.0   \n","\n","        size_encoded  \n","0                1.0  \n","1                3.0  \n","2                1.0  \n","3                2.0  \n","4                2.0  \n","...              ...  \n","187998           2.0  \n","187999           2.0  \n","188000           2.0  \n","188001           1.0  \n","188002           1.0  \n","\n","[188003 rows x 119 columns]"],"text/html":["\n","  <div id=\"df-27e3f502-900b-487e-ae12-a5e2b9593546\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pet_Cat</th>\n","      <th>pet_Dog</th>\n","      <th>pet_Rabbit</th>\n","      <th>gender_Female</th>\n","      <th>gender_Male</th>\n","      <th>gender_Mixed</th>\n","      <th>gender_Unknown</th>\n","      <th>color_Black</th>\n","      <th>color_Black_White</th>\n","      <th>color_Brown_Chocolate</th>\n","      <th>...</th>\n","      <th>vector_92</th>\n","      <th>vector_93</th>\n","      <th>vector_94</th>\n","      <th>vector_95</th>\n","      <th>vector_96</th>\n","      <th>vector_97</th>\n","      <th>vector_98</th>\n","      <th>vector_99</th>\n","      <th>age_encoded</th>\n","      <th>size_encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.180516</td>\n","      <td>0.013883</td>\n","      <td>-0.001330</td>\n","      <td>0.045363</td>\n","      <td>-0.045154</td>\n","      <td>-0.120753</td>\n","      <td>0.029061</td>\n","      <td>0.160477</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.119808</td>\n","      <td>0.110728</td>\n","      <td>0.031900</td>\n","      <td>-0.066685</td>\n","      <td>0.088478</td>\n","      <td>0.060564</td>\n","      <td>-0.138984</td>\n","      <td>0.287138</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.178771</td>\n","      <td>-0.001800</td>\n","      <td>0.087998</td>\n","      <td>0.080699</td>\n","      <td>0.137319</td>\n","      <td>0.013934</td>\n","      <td>-0.265653</td>\n","      <td>0.318983</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.083621</td>\n","      <td>0.131444</td>\n","      <td>0.074253</td>\n","      <td>0.004763</td>\n","      <td>0.194044</td>\n","      <td>0.089118</td>\n","      <td>0.034386</td>\n","      <td>0.392149</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.268244</td>\n","      <td>0.253771</td>\n","      <td>0.169772</td>\n","      <td>-0.035420</td>\n","      <td>0.186678</td>\n","      <td>0.067319</td>\n","      <td>-0.240549</td>\n","      <td>0.531007</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>187998</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>0.121363</td>\n","      <td>0.033949</td>\n","      <td>0.022230</td>\n","      <td>0.020642</td>\n","      <td>0.102412</td>\n","      <td>0.051699</td>\n","      <td>-0.163198</td>\n","      <td>0.198205</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>187999</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.109797</td>\n","      <td>0.125821</td>\n","      <td>0.097630</td>\n","      <td>-0.036324</td>\n","      <td>0.053149</td>\n","      <td>0.037388</td>\n","      <td>-0.281548</td>\n","      <td>0.237170</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>188000</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>-0.240101</td>\n","      <td>0.371879</td>\n","      <td>-0.372603</td>\n","      <td>-0.341499</td>\n","      <td>-0.475661</td>\n","      <td>0.138415</td>\n","      <td>0.051634</td>\n","      <td>0.285470</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>188001</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.073524</td>\n","      <td>0.177094</td>\n","      <td>0.053589</td>\n","      <td>0.146463</td>\n","      <td>0.061074</td>\n","      <td>0.047811</td>\n","      <td>-0.037875</td>\n","      <td>0.224391</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>188002</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>-0.197304</td>\n","      <td>0.279939</td>\n","      <td>-0.044929</td>\n","      <td>0.052943</td>\n","      <td>0.245215</td>\n","      <td>0.201531</td>\n","      <td>-0.090880</td>\n","      <td>0.693550</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>188003 rows × 119 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27e3f502-900b-487e-ae12-a5e2b9593546')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-27e3f502-900b-487e-ae12-a5e2b9593546 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-27e3f502-900b-487e-ae12-a5e2b9593546');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a344e1e-08fa-4a12-b2f2-c93d70bf40d7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a344e1e-08fa-4a12-b2f2-c93d70bf40d7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a344e1e-08fa-4a12-b2f2-c93d70bf40d7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train"}},"metadata":{},"execution_count":117}]},{"cell_type":"code","source":["for i in X_train.columns:\n","  if i not in rw2_X_test:\n","    print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nZR5jz6DfX4I","executionInfo":{"status":"ok","timestamp":1715516048906,"user_tz":-120,"elapsed":7,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"36df1ea2-ffe3-4be5-a73d-34831e5ebb6a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["gender_Unknown\n"]}]},{"cell_type":"code","source":["X_train = X_train.drop(columns=['gender_Unknown'])"],"metadata":{"id":"6lSPRIesfrRG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape, og_X_test.shape, rw2_X_test.shape, y_train.shape, y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uEE2C1nkfMBO","executionInfo":{"status":"ok","timestamp":1715516052392,"user_tz":-120,"elapsed":3,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"eb831649-3e12-4d6e-acd4-8267c606183d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(188003, 118) (7974, 118) (7974, 118) (188003,) (7974,)\n"]}]},{"cell_type":"markdown","source":["## Training + fitting"],"metadata":{"id":"PAHZgVaNQm1q"}},{"cell_type":"code","source":["from sklearn.model_selection import StratifiedKFold, cross_val_score\n","\n","lgbm = LGBMClassifier(\n","    objective='binary',\n","    num_leaves=50,\n","    num_iterations=1500,\n","    learning_rate=0.1,\n","    random_state=555\n",")\n","\n","lgbm.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":248},"id":"Z4FTZMzrgdI7","executionInfo":{"status":"ok","timestamp":1715516099305,"user_tz":-120,"elapsed":40927,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"a7ea1d36-dc4f-484b-e7fb-fc7a5a4d7e51"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/lightgbm/engine.py:172: UserWarning: Found `num_iterations` in params. Will use it instead of argument\n","  _log_warning(f\"Found `{alias}` in params. Will use it instead of argument\")\n"]},{"output_type":"stream","name":"stdout","text":["[LightGBM] [Info] Number of positive: 94198, number of negative: 93805\n","[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.112922 seconds.\n","You can set `force_col_wise=true` to remove the overhead.\n","[LightGBM] [Info] Total Bins 25545\n","[LightGBM] [Info] Number of data points in the train set: 188003, number of used features: 118\n","[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.501045 -> initscore=0.004181\n","[LightGBM] [Info] Start training from score 0.004181\n"]},{"output_type":"execute_result","data":{"text/plain":["LGBMClassifier(num_iterations=1500, num_leaves=50, objective='binary',\n","               random_state=555)"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LGBMClassifier(num_iterations=1500, num_leaves=50, objective=&#x27;binary&#x27;,\n","               random_state=555)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LGBMClassifier</label><div class=\"sk-toggleable__content\"><pre>LGBMClassifier(num_iterations=1500, num_leaves=50, objective=&#x27;binary&#x27;,\n","               random_state=555)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["og_predictions = lgbm.predict(og_X_test)\n","print(f\"Test accuracy og : {accuracy_score(y_test, og_predictions)}\")\n","\n","og_predictions_df = pd.DataFrame(og_predictions)\n","\n","og_predictions_df.to_csv('/content/drive/MyDrive/Thesis/og_predictions.csv', index=False)\n","\n","rw_predictions = lgbm.predict(rw2_X_test)\n","print(f\"Test accuracy rw : {accuracy_score(y_test, rw_predictions)}\")\n","\n","rw_predictions_df = pd.DataFrame(rw_predictions)\n","rw_predictions_df.to_csv('/content/drive/MyDrive/Thesis/rw_predictions.csv', index=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F68MqLd9gmZR","executionInfo":{"status":"ok","timestamp":1715516099776,"user_tz":-120,"elapsed":474,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"4430cc80-d7d0-469c-d851-ebaa44b41f1b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test accuracy og : 0.7968397291196389\n","Test accuracy rw : 0.6550037622272386\n"]}]},{"cell_type":"code","source":["\n","og_predictions = pd.read_csv('/content/drive/MyDrive/Thesis/og_predictions.csv')\n","\n","rw_predictions = pd.read_csv('/content/drive/MyDrive/Thesis/rw_predictions.csv')"],"metadata":{"id":"CxvzAjnXFbzi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["f1 = f1_score(y_test, og_predictions)\n","print(f\"F1-Score og: {f1}\")\n","\n","print(classification_report(y_test, og_predictions))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DdGORTgpiLT-","executionInfo":{"status":"ok","timestamp":1715516099776,"user_tz":-120,"elapsed":7,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"9a80b5e3-ae99-4ee8-8d40-5759212fee2c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["F1-Score og: 0.8037790697674418\n","              precision    recall  f1-score   support\n","\n","           0       0.78      0.80      0.79      3817\n","           1       0.81      0.80      0.80      4157\n","\n","    accuracy                           0.80      7974\n","   macro avg       0.80      0.80      0.80      7974\n","weighted avg       0.80      0.80      0.80      7974\n","\n"]}]},{"cell_type":"code","source":["f1 = f1_score(y_test, rw_predictions)\n","print(f\"F1-Score rw: {f1}\")\n","\n","print(classification_report(y_test, rw_predictions))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IJh0F-ZIiTNB","executionInfo":{"status":"ok","timestamp":1715516107839,"user_tz":-120,"elapsed":368,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"8e760eda-fb35-49f4-e33e-782607b74997"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["F1-Score rw: 0.6868525896414341\n","              precision    recall  f1-score   support\n","\n","           0       0.66      0.58      0.62      3817\n","           1       0.65      0.73      0.69      4157\n","\n","    accuracy                           0.66      7974\n","   macro avg       0.66      0.65      0.65      7974\n","weighted avg       0.66      0.66      0.65      7974\n","\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"m32kor7XGuam"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# code retrieved from: https://seaborn.pydata.org/generated/seaborn.heatmap.html#seaborn.heatmap\n","print(\"Confusion matrix og\")\n","\n","conf_matrix = confusion_matrix(y_test, og_predictions)\n","\n","sns.set(style=\"whitegrid\", color_codes=True)\n","plt.figure(figsize=(10, 6))\n","\n","sns.heatmap(conf_matrix, annot=True, fmt=\"d\", cmap='Reds', cbar=False)\n","\n","plt.title('Confusion Matrix')\n","plt.xlabel('Predicted Labels')\n","plt.ylabel('True Labels')\n","\n","class_labels = ['Unadopted', 'Adopted']\n","plt.xticks(np.arange(len(class_labels)) + 0.5, class_labels, rotation=0)\n","plt.yticks(np.arange(len(class_labels)) + 0.5, class_labels, rotation=0, va=\"center\")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":590},"id":"wQOmFFBkiWOs","executionInfo":{"status":"ok","timestamp":1715522508070,"user_tz":-120,"elapsed":373,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"f528d504-519d-49d2-bb5b-1c9344e54e4f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion matrix og\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# code retrieved from: https://seaborn.pydata.org/generated/seaborn.heatmap.html#seaborn.heatmap\n","print(\"Confusion matrix rw\")\n","\n","conf_matrix = confusion_matrix(y_test, rw_predictions)\n","\n","sns.set(style=\"whitegrid\", color_codes=True)\n","plt.figure(figsize=(10, 6))\n","\n","sns.heatmap(conf_matrix, annot=True, fmt=\"d\", cmap='Reds', cbar=False)\n","\n","plt.title('Confusion Matrix')\n","plt.xlabel('Predicted Labels')\n","plt.ylabel('True Labels')\n","\n","class_labels = ['Unadopted', 'Adopted']\n","plt.xticks(np.arange(len(class_labels)) + 0.5, class_labels, rotation=0)\n","plt.yticks(np.arange(len(class_labels)) + 0.5, class_labels, rotation=0, va=\"center\")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":590},"id":"TrNEA-czidhJ","executionInfo":{"status":"ok","timestamp":1715516121869,"user_tz":-120,"elapsed":844,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"25961c1f-3379-40c7-fe07-34dd70981ab1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion matrix rw\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# visualizing the number of the adoption/no adoption predictions vs the real number\n","print(\"class count og)\")\n","\n","# Actual Class Counts\n","actual_classes, actual_counts = np.unique(y_test, return_counts=True)\n","actual_class_counts = dict(zip(['Adopted' if x == 1 else 'Unadopted' for x in actual_classes[::-1]], actual_counts[::-1]))\n","print(\"Actual Class Counts:\")\n","print(actual_class_counts)\n","\n","# Predicted Class Counts\n","predicted_classes, predicted_counts = np.unique(og_predictions, return_counts=True)\n","predicted_class_counts = dict(zip(['Adopted' if x == 1 else 'Unadopted' for x in predicted_classes[::-1]], predicted_counts[::-1]))\n","print(\"Predicted Class Counts:\")\n","print(predicted_class_counts)\n","\n","fig, ax = plt.subplots(1, 2, figsize=(10, 6))\n","\n","ax[0].pie(actual_counts[::-1], labels=actual_class_counts.keys(), autopct='%1.1f%%', startangle=90, colors=['powderblue', 'lightsalmon'])\n","ax[0].set_title('Actual Class Counts')\n","ax[1].pie(predicted_counts[::-1], labels=predicted_class_counts.keys(), autopct='%1.1f%%', startangle=90, colors=['powderblue', 'lightsalmon'])\n","ax[1].set_title('Predicted Class Counts')\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"8AKtiMsnihS8","executionInfo":{"status":"ok","timestamp":1715516127472,"user_tz":-120,"elapsed":725,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"de3ec605-60a1-4745-dc79-96c6914074d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["class count og)\n","Actual Class Counts:\n","{'Adopted': 4157, 'Unadopted': 3817}\n","Predicted Class Counts:\n","{'Adopted': 4099, 'Unadopted': 3875}\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# visualizing the number of the adoption/no adoption predictions vs the real number\n","print(\"class count rw)\")\n","# Actual Class Counts\n","actual_classes, actual_counts = np.unique(y_test, return_counts=True)\n","actual_class_counts = dict(zip(['Adopted' if x == 1 else 'Unadopted' for x in actual_classes[::-1]], actual_counts[::-1]))\n","print(\"Actual Class Counts:\")\n","print(actual_class_counts)\n","\n","# Predicted Class Counts\n","predicted_classes, predicted_counts = np.unique(rw_predictions, return_counts=True)\n","predicted_class_counts = dict(zip(['Adopted' if x == 1 else 'Unadopted' for x in predicted_classes[::-1]], predicted_counts[::-1]))\n","print(\"Predicted Class Counts:\")\n","print(predicted_class_counts)\n","\n","fig, ax = plt.subplots(1, 2, figsize=(10, 6))\n","\n","ax[0].pie(actual_counts[::-1], labels=actual_class_counts.keys(), autopct='%1.1f%%', startangle=90, colors=['powderblue', 'lightsalmon'])\n","ax[0].set_title('Actual Class Counts')\n","ax[1].pie(predicted_counts[::-1], labels=predicted_class_counts.keys(), autopct='%1.1f%%', startangle=90, colors=['powderblue', 'lightsalmon'])\n","ax[1].set_title('Predicted Class Counts')\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":518},"id":"J3azVLoEipGk","executionInfo":{"status":"ok","timestamp":1715516129698,"user_tz":-120,"elapsed":6,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"10d6f850-b4ec-433b-bf70-8e1b4e53eea6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["class count rw)\n","Actual Class Counts:\n","{'Adopted': 4157, 'Unadopted': 3817}\n","Predicted Class Counts:\n","{'Adopted': 4628, 'Unadopted': 3346}\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#visualizing the two predictions next to each other\n","\n","# Predicted Class Counts OG\n","predicted_classes1, predicted_counts1 = np.unique(og_predictions, return_counts=True)\n","predicted_class_counts1 = dict(zip(['Adopted' if x == 1 else 'Unadopted' for x in predicted_classes1[::-1]], predicted_counts1[::-1]))\n","print(\"Predicted Class Counts:\")\n","print(predicted_class_counts1)\n","\n","# Predicted Class Counts RW\n","predicted_classes, predicted_counts = np.unique(rw_predictions, return_counts=True)\n","predicted_class_counts = dict(zip(['Adopted' if x == 1 else 'Unadopted' for x in predicted_classes[::-1]], predicted_counts[::-1]))\n","print(\"Predicted Class Counts:\")\n","print(predicted_class_counts)\n","\n","fig, ax = plt.subplots(1, 2, figsize=(10, 6))\n","\n","ax[0].pie(predicted_counts1[::-1], labels=predicted_class_counts1.keys(), autopct='%1.1f%%', startangle=90, colors=['powderblue', 'lightsalmon'])\n","ax[0].set_title('Predicted class counts original descriptions')\n","ax[1].pie(predicted_counts[::-1], labels=predicted_class_counts.keys(), autopct='%1.1f%%', startangle=90, colors=['powderblue', 'lightsalmon'])\n","ax[1].set_title('Predicted class counts rewritten descriptions')\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":500},"id":"OR5sH_ucNXaR","executionInfo":{"status":"ok","timestamp":1715524319619,"user_tz":-120,"elapsed":7,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"ce9e8e64-807e-44ea-f330-4e73cfe1730d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Predicted Class Counts:\n","{'Adopted': 4099, 'Unadopted': 3875}\n","Predicted Class Counts:\n","{'Adopted': 4628, 'Unadopted': 3346}\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["rw_predictions = rw_predictions['0'].to_numpy()\n","og_predictions = og_predictions['0'].to_numpy()"],"metadata":{"id":"sJz9a3akzTIC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["og_predictions = og_predictions.ravel()\n","rw_predictions = rw_predictions.ravel()"],"metadata":{"id":"o1zj4gV2JO9O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# performing McNemar's test\n","from statsmodels.stats.contingency_tables import mcnemar\n","\n","data = {'Original': (og_predictions == 1), 'Modified': (rw_predictions == 1)}\n","df = pd.DataFrame(data)\n","\n","conf_matrix = confusion_matrix(df['Original'], df['Modified'])\n","\n","result = mcnemar(conf_matrix, exact = False)\n","\n","print(f\"Test statistic: {result.statistic}\")\n","print(f\"P-value: {result.pvalue}\")\n","if result.pvalue < 0.05:\n","    print(\"Significant differences found.\")\n","else:\n","    print(\"No significant differences found.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r2tc087QmSbX","executionInfo":{"status":"ok","timestamp":1715523673402,"user_tz":-120,"elapsed":451,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"25a08907-28fa-4387-a305-be3dd56ea642"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test statistic: 123.41035856573706\n","P-value: 1.1339525214697867e-28\n","Significant differences found.\n"]}]},{"cell_type":"code","source":["# contigency table\n","\n","sns.set(style=\"whitegrid\", color_codes=True)\n","plt.figure(figsize=(10, 6))\n","\n","sns.heatmap(conf_matrix, annot=True, fmt=\"d\", cmap='Blues', cbar=False)\n","\n","plt.title('Contigency table McNemar')\n","plt.xlabel('Rewritten')\n","plt.ylabel('Original')\n","\n","class_labels = ['Predicted \"unadopted\"', 'Predicted \"adopted\"']\n","plt.xticks(np.arange(len(class_labels)) + 0.5, class_labels, rotation=0)\n","plt.yticks(np.arange(len(class_labels)) + 0.5, class_labels, rotation=0, va=\"center\")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":573},"id":"FoBSagz8zXCl","executionInfo":{"status":"ok","timestamp":1715525975547,"user_tz":-120,"elapsed":696,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"72a5bc58-091f-4d87-98f9-cffa125162bb"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## EDA"],"metadata":{"id":"xgjbDNThOBcu"}},{"cell_type":"code","source":["new_data"],"metadata":{"id":"EHK0bxABzb1k","colab":{"base_uri":"https://localhost:8080/","height":843},"executionInfo":{"status":"ok","timestamp":1715843128952,"user_tz":-120,"elapsed":245,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"4e106f7c-a0a3-4508-e0a1-3c43542aa593"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0  pet     age  gender            color    size  photos  \\\n","0         107349  Dog  Senior    Male      White_Cream   Small       1   \n","1         163205  Dog   Young    Male          Unknown  Medium       3   \n","2          65311  Cat  Senior  Female      Black_White  Medium       1   \n","3         132421  Dog   Adult    Male            Other   Small       1   \n","4         140095  Dog   Adult    Male             Gray   Large       6   \n","...          ...  ...     ...     ...              ...     ...     ...   \n","7969      215678  Dog  Senior  Female  Brown_Chocolate   Small       3   \n","7970       74376  Cat    Baby  Female  Brown_Chocolate  Medium       2   \n","7971      208890  Dog  Senior  Female      White_Cream   Large       3   \n","7972       60846  Cat   Adult  Female          Unknown   Small       1   \n","7973       20083  Dog    Baby    Male            Black   Large       1   \n","\n","      vector_0  vector_1  vector_2  ...  vector_94  vector_95  vector_96  \\\n","0     0.261437  0.008734  0.097171  ...  -0.134316   0.352780   0.076132   \n","1    -0.063906 -0.120907 -0.150912  ...   0.012253   0.006966   0.047521   \n","2    -0.331073 -0.269659  0.095112  ...   0.209824   0.061069   0.200590   \n","3     0.072339 -0.030328  0.062557  ...   0.153102  -0.006564   0.100330   \n","4    -0.073295 -0.003285 -0.058319  ...  -0.008426  -0.043694   0.184267   \n","...        ...       ...       ...  ...        ...        ...        ...   \n","7969 -0.155340 -0.003608 -0.432607  ...  -0.323024  -0.147513  -0.212039   \n","7970  0.085067  0.011910  0.002799  ...  -0.072335   0.064474  -0.070534   \n","7971 -0.190325  0.142001 -0.036622  ...   0.194289  -0.093262   0.184321   \n","7972  0.056520  0.060410 -0.230726  ...   0.079041   0.059379   0.003416   \n","7973 -0.005337  0.012641 -0.046148  ...   0.075784   0.011652   0.067177   \n","\n","      vector_97  vector_98  vector_99       pid    adopted  \\\n","0      0.231228  -0.015402   0.585188  40847443    Adopted   \n","1      0.012037  -0.279150   0.272248  42274229  Unadopted   \n","2      0.076650  -0.063295   0.470014  42591488    Adopted   \n","3      0.073430  -0.020734   0.133471  40978479  Unadopted   \n","4      0.098949  -0.047755   0.270142  40815035  Unadopted   \n","...         ...        ...        ...       ...        ...   \n","7969  -0.231464  -0.157857   0.086146  37476960  Unadopted   \n","7970   0.206427   0.049355   0.243603  43529102    Adopted   \n","7971   0.241022  -0.235496   0.717466  40080248  Unadopted   \n","7972   0.097963  -0.244182   0.339680  36739879    Adopted   \n","7973   0.056456  -0.079175   0.239966  41585564    Adopted   \n","\n","                                          description_y  \\\n","0     Available for adoption now!  Brawny is a male ...   \n","1     Hi there, I'm Finnick! I'm a shy, sensitive pu...   \n","2     <FONT SIZE=3> <FONT COLOR=\"669900\"><b>I am ava...   \n","3     WAGS RESCUE WELCOMES SWEET FELIX... This tiny ...   \n","4     Handsome Vadar was rescued from Baldwin Park A...   \n","...                                                 ...   \n","7969  Kahlua recently lost her (real) Mom, who made ...   \n","7970  It almost seems unfair that one kitten can be ...   \n","7971  NYS Registered Rescue # RR102 View full listin...   \n","7972  Abigail loves to be held and is very affection...   \n","7973  Nemo was part of a litter of 8 puppies that we...   \n","\n","                                  rewritten_description  \n","0     Brawny, an 8-year-old male Malti-Poo, is ready...  \n","1     Meet Finnick, a sensitive and shy pup in searc...  \n","2     This sweet cat is looking for a forever home! ...  \n","3     Felix is a tiny 18-month-old Chihuahua weighin...  \n","4     Vadar is a two-year-old handsome boy who loves...  \n","...                                                 ...  \n","7969  Kahlua is a spunky and smart senior dog who lo...  \n","7970  Chaii is a stunning 10-week-old kitten who is ...  \n","7971  Panda is a serene Great Pyrenees looking for a...  \n","7972  Abigail is a sweet and affectionate cat who lo...  \n","7973  Nemo is a playful and resilient puppy who has ...  \n","\n","[7974 rows x 111 columns]"],"text/html":["\n","  <div id=\"df-b11bb04e-24e2-487f-b6ee-0aafae5a8bad\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>pet</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>color</th>\n","      <th>size</th>\n","      <th>photos</th>\n","      <th>vector_0</th>\n","      <th>vector_1</th>\n","      <th>vector_2</th>\n","      <th>...</th>\n","      <th>vector_94</th>\n","      <th>vector_95</th>\n","      <th>vector_96</th>\n","      <th>vector_97</th>\n","      <th>vector_98</th>\n","      <th>vector_99</th>\n","      <th>pid</th>\n","      <th>adopted</th>\n","      <th>description_y</th>\n","      <th>rewritten_description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>107349</td>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Male</td>\n","      <td>White_Cream</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.261437</td>\n","      <td>0.008734</td>\n","      <td>0.097171</td>\n","      <td>...</td>\n","      <td>-0.134316</td>\n","      <td>0.352780</td>\n","      <td>0.076132</td>\n","      <td>0.231228</td>\n","      <td>-0.015402</td>\n","      <td>0.585188</td>\n","      <td>40847443</td>\n","      <td>Adopted</td>\n","      <td>Available for adoption now!  Brawny is a male ...</td>\n","      <td>Brawny, an 8-year-old male Malti-Poo, is ready...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>163205</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Unknown</td>\n","      <td>Medium</td>\n","      <td>3</td>\n","      <td>-0.063906</td>\n","      <td>-0.120907</td>\n","      <td>-0.150912</td>\n","      <td>...</td>\n","      <td>0.012253</td>\n","      <td>0.006966</td>\n","      <td>0.047521</td>\n","      <td>0.012037</td>\n","      <td>-0.279150</td>\n","      <td>0.272248</td>\n","      <td>42274229</td>\n","      <td>Unadopted</td>\n","      <td>Hi there, I'm Finnick! I'm a shy, sensitive pu...</td>\n","      <td>Meet Finnick, a sensitive and shy pup in searc...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65311</td>\n","      <td>Cat</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>Black_White</td>\n","      <td>Medium</td>\n","      <td>1</td>\n","      <td>-0.331073</td>\n","      <td>-0.269659</td>\n","      <td>0.095112</td>\n","      <td>...</td>\n","      <td>0.209824</td>\n","      <td>0.061069</td>\n","      <td>0.200590</td>\n","      <td>0.076650</td>\n","      <td>-0.063295</td>\n","      <td>0.470014</td>\n","      <td>42591488</td>\n","      <td>Adopted</td>\n","      <td>&lt;FONT SIZE=3&gt; &lt;FONT COLOR=\"669900\"&gt;&lt;b&gt;I am ava...</td>\n","      <td>This sweet cat is looking for a forever home! ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>132421</td>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Other</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.072339</td>\n","      <td>-0.030328</td>\n","      <td>0.062557</td>\n","      <td>...</td>\n","      <td>0.153102</td>\n","      <td>-0.006564</td>\n","      <td>0.100330</td>\n","      <td>0.073430</td>\n","      <td>-0.020734</td>\n","      <td>0.133471</td>\n","      <td>40978479</td>\n","      <td>Unadopted</td>\n","      <td>WAGS RESCUE WELCOMES SWEET FELIX... This tiny ...</td>\n","      <td>Felix is a tiny 18-month-old Chihuahua weighin...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>140095</td>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Gray</td>\n","      <td>Large</td>\n","      <td>6</td>\n","      <td>-0.073295</td>\n","      <td>-0.003285</td>\n","      <td>-0.058319</td>\n","      <td>...</td>\n","      <td>-0.008426</td>\n","      <td>-0.043694</td>\n","      <td>0.184267</td>\n","      <td>0.098949</td>\n","      <td>-0.047755</td>\n","      <td>0.270142</td>\n","      <td>40815035</td>\n","      <td>Unadopted</td>\n","      <td>Handsome Vadar was rescued from Baldwin Park A...</td>\n","      <td>Vadar is a two-year-old handsome boy who loves...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7969</th>\n","      <td>215678</td>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>Brown_Chocolate</td>\n","      <td>Small</td>\n","      <td>3</td>\n","      <td>-0.155340</td>\n","      <td>-0.003608</td>\n","      <td>-0.432607</td>\n","      <td>...</td>\n","      <td>-0.323024</td>\n","      <td>-0.147513</td>\n","      <td>-0.212039</td>\n","      <td>-0.231464</td>\n","      <td>-0.157857</td>\n","      <td>0.086146</td>\n","      <td>37476960</td>\n","      <td>Unadopted</td>\n","      <td>Kahlua recently lost her (real) Mom, who made ...</td>\n","      <td>Kahlua is a spunky and smart senior dog who lo...</td>\n","    </tr>\n","    <tr>\n","      <th>7970</th>\n","      <td>74376</td>\n","      <td>Cat</td>\n","      <td>Baby</td>\n","      <td>Female</td>\n","      <td>Brown_Chocolate</td>\n","      <td>Medium</td>\n","      <td>2</td>\n","      <td>0.085067</td>\n","      <td>0.011910</td>\n","      <td>0.002799</td>\n","      <td>...</td>\n","      <td>-0.072335</td>\n","      <td>0.064474</td>\n","      <td>-0.070534</td>\n","      <td>0.206427</td>\n","      <td>0.049355</td>\n","      <td>0.243603</td>\n","      <td>43529102</td>\n","      <td>Adopted</td>\n","      <td>It almost seems unfair that one kitten can be ...</td>\n","      <td>Chaii is a stunning 10-week-old kitten who is ...</td>\n","    </tr>\n","    <tr>\n","      <th>7971</th>\n","      <td>208890</td>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>White_Cream</td>\n","      <td>Large</td>\n","      <td>3</td>\n","      <td>-0.190325</td>\n","      <td>0.142001</td>\n","      <td>-0.036622</td>\n","      <td>...</td>\n","      <td>0.194289</td>\n","      <td>-0.093262</td>\n","      <td>0.184321</td>\n","      <td>0.241022</td>\n","      <td>-0.235496</td>\n","      <td>0.717466</td>\n","      <td>40080248</td>\n","      <td>Unadopted</td>\n","      <td>NYS Registered Rescue # RR102 View full listin...</td>\n","      <td>Panda is a serene Great Pyrenees looking for a...</td>\n","    </tr>\n","    <tr>\n","      <th>7972</th>\n","      <td>60846</td>\n","      <td>Cat</td>\n","      <td>Adult</td>\n","      <td>Female</td>\n","      <td>Unknown</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.056520</td>\n","      <td>0.060410</td>\n","      <td>-0.230726</td>\n","      <td>...</td>\n","      <td>0.079041</td>\n","      <td>0.059379</td>\n","      <td>0.003416</td>\n","      <td>0.097963</td>\n","      <td>-0.244182</td>\n","      <td>0.339680</td>\n","      <td>36739879</td>\n","      <td>Adopted</td>\n","      <td>Abigail loves to be held and is very affection...</td>\n","      <td>Abigail is a sweet and affectionate cat who lo...</td>\n","    </tr>\n","    <tr>\n","      <th>7973</th>\n","      <td>20083</td>\n","      <td>Dog</td>\n","      <td>Baby</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Large</td>\n","      <td>1</td>\n","      <td>-0.005337</td>\n","      <td>0.012641</td>\n","      <td>-0.046148</td>\n","      <td>...</td>\n","      <td>0.075784</td>\n","      <td>0.011652</td>\n","      <td>0.067177</td>\n","      <td>0.056456</td>\n","      <td>-0.079175</td>\n","      <td>0.239966</td>\n","      <td>41585564</td>\n","      <td>Adopted</td>\n","      <td>Nemo was part of a litter of 8 puppies that we...</td>\n","      <td>Nemo is a playful and resilient puppy who has ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7974 rows × 111 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b11bb04e-24e2-487f-b6ee-0aafae5a8bad')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b11bb04e-24e2-487f-b6ee-0aafae5a8bad button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b11bb04e-24e2-487f-b6ee-0aafae5a8bad');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4031644a-e4bc-4ddf-bcf6-8a1919c51d76\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4031644a-e4bc-4ddf-bcf6-8a1919c51d76')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4031644a-e4bc-4ddf-bcf6-8a1919c51d76 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"new_data"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["\n","og_predictions = pd.read_csv('/content/drive/MyDrive/Thesis/og_predictions.csv')\n","\n","rw_predictions = pd.read_csv('/content/drive/MyDrive/Thesis/rw_predictions.csv')"],"metadata":{"id":"YDHBMgdsSIKE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["og_predictions"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"GNwevd7GSLhn","executionInfo":{"status":"ok","timestamp":1715843133070,"user_tz":-120,"elapsed":219,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"f0c6e4af-00e1-44af-ab2e-f1c9cf274d3d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      0\n","0     1\n","1     0\n","2     1\n","3     1\n","4     0\n","...  ..\n","7969  0\n","7970  0\n","7971  0\n","7972  0\n","7973  1\n","\n","[7974 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-e353ae44-2b02-4e89-91a1-c9e6db253670\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7969</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7970</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7971</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7972</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7973</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7974 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e353ae44-2b02-4e89-91a1-c9e6db253670')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e353ae44-2b02-4e89-91a1-c9e6db253670 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e353ae44-2b02-4e89-91a1-c9e6db253670');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dae07911-e79c-4594-9f2d-7cd0ba9446a2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dae07911-e79c-4594-9f2d-7cd0ba9446a2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dae07911-e79c-4594-9f2d-7cd0ba9446a2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"og_predictions","summary":"{\n  \"name\": \"og_predictions\",\n  \"rows\": 7974,\n  \"fields\": [\n    {\n      \"column\": \"0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["\n","new_data['og_predictions'] = og_predictions['0']\n","new_data['rw_predictions'] = rw_predictions['0']\n"],"metadata":{"id":"jzxGT3eHSMcG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":843},"id":"aJLI-nZ9ShT8","executionInfo":{"status":"ok","timestamp":1715843140500,"user_tz":-120,"elapsed":6,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"d527a552-878b-4812-a2d7-f6d9b0de51f2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0  pet     age  gender            color    size  photos  \\\n","0         107349  Dog  Senior    Male      White_Cream   Small       1   \n","1         163205  Dog   Young    Male          Unknown  Medium       3   \n","2          65311  Cat  Senior  Female      Black_White  Medium       1   \n","3         132421  Dog   Adult    Male            Other   Small       1   \n","4         140095  Dog   Adult    Male             Gray   Large       6   \n","...          ...  ...     ...     ...              ...     ...     ...   \n","7969      215678  Dog  Senior  Female  Brown_Chocolate   Small       3   \n","7970       74376  Cat    Baby  Female  Brown_Chocolate  Medium       2   \n","7971      208890  Dog  Senior  Female      White_Cream   Large       3   \n","7972       60846  Cat   Adult  Female          Unknown   Small       1   \n","7973       20083  Dog    Baby    Male            Black   Large       1   \n","\n","      vector_0  vector_1  vector_2  ...  vector_96  vector_97  vector_98  \\\n","0     0.261437  0.008734  0.097171  ...   0.076132   0.231228  -0.015402   \n","1    -0.063906 -0.120907 -0.150912  ...   0.047521   0.012037  -0.279150   \n","2    -0.331073 -0.269659  0.095112  ...   0.200590   0.076650  -0.063295   \n","3     0.072339 -0.030328  0.062557  ...   0.100330   0.073430  -0.020734   \n","4    -0.073295 -0.003285 -0.058319  ...   0.184267   0.098949  -0.047755   \n","...        ...       ...       ...  ...        ...        ...        ...   \n","7969 -0.155340 -0.003608 -0.432607  ...  -0.212039  -0.231464  -0.157857   \n","7970  0.085067  0.011910  0.002799  ...  -0.070534   0.206427   0.049355   \n","7971 -0.190325  0.142001 -0.036622  ...   0.184321   0.241022  -0.235496   \n","7972  0.056520  0.060410 -0.230726  ...   0.003416   0.097963  -0.244182   \n","7973 -0.005337  0.012641 -0.046148  ...   0.067177   0.056456  -0.079175   \n","\n","      vector_99       pid    adopted  \\\n","0      0.585188  40847443    Adopted   \n","1      0.272248  42274229  Unadopted   \n","2      0.470014  42591488    Adopted   \n","3      0.133471  40978479  Unadopted   \n","4      0.270142  40815035  Unadopted   \n","...         ...       ...        ...   \n","7969   0.086146  37476960  Unadopted   \n","7970   0.243603  43529102    Adopted   \n","7971   0.717466  40080248  Unadopted   \n","7972   0.339680  36739879    Adopted   \n","7973   0.239966  41585564    Adopted   \n","\n","                                          description_y  \\\n","0     Available for adoption now!  Brawny is a male ...   \n","1     Hi there, I'm Finnick! I'm a shy, sensitive pu...   \n","2     <FONT SIZE=3> <FONT COLOR=\"669900\"><b>I am ava...   \n","3     WAGS RESCUE WELCOMES SWEET FELIX... This tiny ...   \n","4     Handsome Vadar was rescued from Baldwin Park A...   \n","...                                                 ...   \n","7969  Kahlua recently lost her (real) Mom, who made ...   \n","7970  It almost seems unfair that one kitten can be ...   \n","7971  NYS Registered Rescue # RR102 View full listin...   \n","7972  Abigail loves to be held and is very affection...   \n","7973  Nemo was part of a litter of 8 puppies that we...   \n","\n","                                  rewritten_description  og_predictions  \\\n","0     Brawny, an 8-year-old male Malti-Poo, is ready...               1   \n","1     Meet Finnick, a sensitive and shy pup in searc...               0   \n","2     This sweet cat is looking for a forever home! ...               1   \n","3     Felix is a tiny 18-month-old Chihuahua weighin...               1   \n","4     Vadar is a two-year-old handsome boy who loves...               0   \n","...                                                 ...             ...   \n","7969  Kahlua is a spunky and smart senior dog who lo...               0   \n","7970  Chaii is a stunning 10-week-old kitten who is ...               0   \n","7971  Panda is a serene Great Pyrenees looking for a...               0   \n","7972  Abigail is a sweet and affectionate cat who lo...               0   \n","7973  Nemo is a playful and resilient puppy who has ...               1   \n","\n","      rw_predictions  \n","0                  0  \n","1                  1  \n","2                  0  \n","3                  1  \n","4                  0  \n","...              ...  \n","7969               1  \n","7970               1  \n","7971               0  \n","7972               0  \n","7973               1  \n","\n","[7974 rows x 113 columns]"],"text/html":["\n","  <div id=\"df-008aa85a-58fb-4d3f-b63c-35dbcbf464a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>pet</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>color</th>\n","      <th>size</th>\n","      <th>photos</th>\n","      <th>vector_0</th>\n","      <th>vector_1</th>\n","      <th>vector_2</th>\n","      <th>...</th>\n","      <th>vector_96</th>\n","      <th>vector_97</th>\n","      <th>vector_98</th>\n","      <th>vector_99</th>\n","      <th>pid</th>\n","      <th>adopted</th>\n","      <th>description_y</th>\n","      <th>rewritten_description</th>\n","      <th>og_predictions</th>\n","      <th>rw_predictions</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>107349</td>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Male</td>\n","      <td>White_Cream</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.261437</td>\n","      <td>0.008734</td>\n","      <td>0.097171</td>\n","      <td>...</td>\n","      <td>0.076132</td>\n","      <td>0.231228</td>\n","      <td>-0.015402</td>\n","      <td>0.585188</td>\n","      <td>40847443</td>\n","      <td>Adopted</td>\n","      <td>Available for adoption now!  Brawny is a male ...</td>\n","      <td>Brawny, an 8-year-old male Malti-Poo, is ready...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>163205</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Unknown</td>\n","      <td>Medium</td>\n","      <td>3</td>\n","      <td>-0.063906</td>\n","      <td>-0.120907</td>\n","      <td>-0.150912</td>\n","      <td>...</td>\n","      <td>0.047521</td>\n","      <td>0.012037</td>\n","      <td>-0.279150</td>\n","      <td>0.272248</td>\n","      <td>42274229</td>\n","      <td>Unadopted</td>\n","      <td>Hi there, I'm Finnick! I'm a shy, sensitive pu...</td>\n","      <td>Meet Finnick, a sensitive and shy pup in searc...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65311</td>\n","      <td>Cat</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>Black_White</td>\n","      <td>Medium</td>\n","      <td>1</td>\n","      <td>-0.331073</td>\n","      <td>-0.269659</td>\n","      <td>0.095112</td>\n","      <td>...</td>\n","      <td>0.200590</td>\n","      <td>0.076650</td>\n","      <td>-0.063295</td>\n","      <td>0.470014</td>\n","      <td>42591488</td>\n","      <td>Adopted</td>\n","      <td>&lt;FONT SIZE=3&gt; &lt;FONT COLOR=\"669900\"&gt;&lt;b&gt;I am ava...</td>\n","      <td>This sweet cat is looking for a forever home! ...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>132421</td>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Other</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.072339</td>\n","      <td>-0.030328</td>\n","      <td>0.062557</td>\n","      <td>...</td>\n","      <td>0.100330</td>\n","      <td>0.073430</td>\n","      <td>-0.020734</td>\n","      <td>0.133471</td>\n","      <td>40978479</td>\n","      <td>Unadopted</td>\n","      <td>WAGS RESCUE WELCOMES SWEET FELIX... This tiny ...</td>\n","      <td>Felix is a tiny 18-month-old Chihuahua weighin...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>140095</td>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Gray</td>\n","      <td>Large</td>\n","      <td>6</td>\n","      <td>-0.073295</td>\n","      <td>-0.003285</td>\n","      <td>-0.058319</td>\n","      <td>...</td>\n","      <td>0.184267</td>\n","      <td>0.098949</td>\n","      <td>-0.047755</td>\n","      <td>0.270142</td>\n","      <td>40815035</td>\n","      <td>Unadopted</td>\n","      <td>Handsome Vadar was rescued from Baldwin Park A...</td>\n","      <td>Vadar is a two-year-old handsome boy who loves...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7969</th>\n","      <td>215678</td>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>Brown_Chocolate</td>\n","      <td>Small</td>\n","      <td>3</td>\n","      <td>-0.155340</td>\n","      <td>-0.003608</td>\n","      <td>-0.432607</td>\n","      <td>...</td>\n","      <td>-0.212039</td>\n","      <td>-0.231464</td>\n","      <td>-0.157857</td>\n","      <td>0.086146</td>\n","      <td>37476960</td>\n","      <td>Unadopted</td>\n","      <td>Kahlua recently lost her (real) Mom, who made ...</td>\n","      <td>Kahlua is a spunky and smart senior dog who lo...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7970</th>\n","      <td>74376</td>\n","      <td>Cat</td>\n","      <td>Baby</td>\n","      <td>Female</td>\n","      <td>Brown_Chocolate</td>\n","      <td>Medium</td>\n","      <td>2</td>\n","      <td>0.085067</td>\n","      <td>0.011910</td>\n","      <td>0.002799</td>\n","      <td>...</td>\n","      <td>-0.070534</td>\n","      <td>0.206427</td>\n","      <td>0.049355</td>\n","      <td>0.243603</td>\n","      <td>43529102</td>\n","      <td>Adopted</td>\n","      <td>It almost seems unfair that one kitten can be ...</td>\n","      <td>Chaii is a stunning 10-week-old kitten who is ...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7971</th>\n","      <td>208890</td>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>White_Cream</td>\n","      <td>Large</td>\n","      <td>3</td>\n","      <td>-0.190325</td>\n","      <td>0.142001</td>\n","      <td>-0.036622</td>\n","      <td>...</td>\n","      <td>0.184321</td>\n","      <td>0.241022</td>\n","      <td>-0.235496</td>\n","      <td>0.717466</td>\n","      <td>40080248</td>\n","      <td>Unadopted</td>\n","      <td>NYS Registered Rescue # RR102 View full listin...</td>\n","      <td>Panda is a serene Great Pyrenees looking for a...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7972</th>\n","      <td>60846</td>\n","      <td>Cat</td>\n","      <td>Adult</td>\n","      <td>Female</td>\n","      <td>Unknown</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.056520</td>\n","      <td>0.060410</td>\n","      <td>-0.230726</td>\n","      <td>...</td>\n","      <td>0.003416</td>\n","      <td>0.097963</td>\n","      <td>-0.244182</td>\n","      <td>0.339680</td>\n","      <td>36739879</td>\n","      <td>Adopted</td>\n","      <td>Abigail loves to be held and is very affection...</td>\n","      <td>Abigail is a sweet and affectionate cat who lo...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7973</th>\n","      <td>20083</td>\n","      <td>Dog</td>\n","      <td>Baby</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Large</td>\n","      <td>1</td>\n","      <td>-0.005337</td>\n","      <td>0.012641</td>\n","      <td>-0.046148</td>\n","      <td>...</td>\n","      <td>0.067177</td>\n","      <td>0.056456</td>\n","      <td>-0.079175</td>\n","      <td>0.239966</td>\n","      <td>41585564</td>\n","      <td>Adopted</td>\n","      <td>Nemo was part of a litter of 8 puppies that we...</td>\n","      <td>Nemo is a playful and resilient puppy who has ...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7974 rows × 113 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-008aa85a-58fb-4d3f-b63c-35dbcbf464a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-008aa85a-58fb-4d3f-b63c-35dbcbf464a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-008aa85a-58fb-4d3f-b63c-35dbcbf464a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1de705c3-42d7-4f44-be0e-9d6ff2e4ce8c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1de705c3-42d7-4f44-be0e-9d6ff2e4ce8c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1de705c3-42d7-4f44-be0e-9d6ff2e4ce8c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"new_data"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["filtered_df = new_data[(new_data['pet'] == 'Dog') & (new_data['size'] == 'Small') & (new_data['age'] == 'Young') & (new_data['color'] == 'Black')]\n"],"metadata":{"id":"Kwr95L_ZSh-G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["filtered_df = filtered_df.reset_index()"],"metadata":{"id":"w5EvKL26VRja"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["filtered_df.iloc[16]['description_y']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"TPE2jkQMUrgL","executionInfo":{"status":"ok","timestamp":1715610183135,"user_tz":-120,"elapsed":492,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"4645f72d-dcce-403e-d940-6b727b84e696"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"Hi ya Peeps! It's me Metro Barkley and I am looking for love and a future right here on Petfinder. So read about me and let me know if you think we might be a good match. I'm looking forward to meeting you soon! Here's my stats: Possible Breed: Lhasa Apso Gender: I'm a guy, an hombre, a dude Colors: Classic black and white Age: The vet says about 2 years young Weight: Around 13 pounds Metro needs a very special foster or family to help him with fear. When he first meets someone, he is very afraid and nips. Once he gets to know a person, this behavior disappears and you'd never know he has this tendency. The perfect home has no kids under 16 and people who are patient and understanding. He needs time to learn that humans won't hurt him again. If you have not yet been approved, begin an application to adopt Metro or one of our other pups at www.shihtzu-rescue.com. PS. I've had ALL my vetting, and oh boy, it was a lot. Here's what I had done: Distemper/Parvo shots- TWICE. One shot doesn't cut it. Bordetella shots - ALSO TWICE. Spay/Neuter-of course. A fecal exam so I don't have any bad worms. Treatment if I do. A heartworm test. Treatment if I am positive for heart worms BLOODWORK to make sure my liver and kidneys are working well, because you know, we doggies often have issues in the liver and kidneys. A DENTAL exam AND cleaning if I needed it- yep, all my toofies are checked out. See, that's a LOT. Ask your vet - that's a LOT.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["filtered_df.iloc[16]['rewritten_description'] # this is an example that normally was not adopted and not predcited as adopted, but with the rewritten description it was"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"hkLZfpKFVMe4","executionInfo":{"status":"ok","timestamp":1715610177242,"user_tz":-120,"elapsed":316,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"595aabab-848b-44c7-b982-3af1d59ee5ef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Metro Barkley is a handsome 2-year-old Lhasa Apso weighing around 13 pounds, with classic black and white coloring. While he may be fearful initially and nip, with time and patience, he becomes an affectionate and loving companion. Metro would thrive in a home with no kids under 16 and caregivers who are understanding and gentle. He has undergone extensive vetting, including multiple vaccinations, spay/neuter, fecal exams, heartworm testing, bloodwork, and dental care. If you are ready to provide Metro with the love and security he deserves, start the adoption process at www.shihtzu-rescue.com.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["filtered_df2 = new_data[(new_data['pet'] == 'Dog') & (new_data['size'] == 'Small') & (new_data['age'] == 'Young') & (new_data['color'] == 'Black') & (new_data['gender'] == 'Male')]"],"metadata":{"id":"SMKqZVVvVcsg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["filtered_df2 = filtered_df2.reset_index()"],"metadata":{"id":"I-crJtBvV7yL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["filtered_df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":860},"id":"BcuRKRwUV9gD","executionInfo":{"status":"ok","timestamp":1715843214826,"user_tz":-120,"elapsed":7,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"a611805a-20ea-4929-ad5b-64f14b348207"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    index  Unnamed: 0  pet    age gender  color   size  photos  vector_0  \\\n","0    1441       49343  Dog  Young   Male  Black  Small       6 -0.121777   \n","1    2824       22419  Dog  Young   Male  Black  Small       3 -0.001406   \n","2    4111      212739  Dog  Young   Male  Black  Small       1  0.014582   \n","3    4139       79898  Dog  Young   Male  Black  Small       3 -0.186583   \n","4    4424       64173  Dog  Young   Male  Black  Small       1 -0.066086   \n","5    4457       21493  Dog  Young   Male  Black  Small       1  0.001903   \n","6    5085      211254  Dog  Young   Male  Black  Small       3 -0.090937   \n","7    5282      211794  Dog  Young   Male  Black  Small       2  0.085650   \n","8    5574      141635  Dog  Young   Male  Black  Small       3  0.012118   \n","9    6449       10089  Dog  Young   Male  Black  Small       3  0.259467   \n","10   7538       87749  Dog  Young   Male  Black  Small       5  0.093385   \n","\n","    vector_1  ...  vector_96  vector_97  vector_98  vector_99       pid  \\\n","0  -0.218044  ...   0.088650   0.103574  -0.028310   0.314079  42736159   \n","1  -0.037863  ...   0.120176   0.116002  -0.019253   0.370966  42949769   \n","2   0.412747  ...  -0.054529   0.456621  -0.344998   0.192412  36712299   \n","3  -0.076838  ...  -0.149038   0.028844  -0.119140   0.358402  40791869   \n","4  -0.013621  ...   0.059037   0.059345   0.152540   0.157250  42489893   \n","5   0.026786  ...   0.126646  -0.055693  -0.001383   0.234727  43468723   \n","6  -0.250903  ...   0.139796   0.046125  -0.304366   0.276967  39822464   \n","7  -0.107940  ...  -0.148934   0.332792   0.057637   0.464162  42089771   \n","8  -0.007725  ...   0.054592  -0.027791   0.056678   0.028045  26527929   \n","9  -0.019212  ...   0.299457   0.087704  -0.077071   0.483191  37565105   \n","10 -0.079673  ...   0.062229   0.026060  -0.156860   0.190361  41247211   \n","\n","      adopted                                      description_y  \\\n","0     Adopted  This handsome guy would like nothing better th...   \n","1     Adopted  You know anyone can have a purebred dog, and d...   \n","2   Unadopted  Shiloh Shiloh is a playful little two year-old...   \n","3     Adopted  Are you looking for an active and energetic an...   \n","4     Adopted  Our goal is to have all adopted dogs spayed/ne...   \n","5     Adopted  WELL HERE WE GO AGAIN.........  As hard as I t...   \n","6   Unadopted  Hi, my name is: STROKER I am a: Small mixed br...   \n","7   Unadopted  Hi ya Peeps! It's me Metro Barkley and I am lo...   \n","8   Unadopted  Email us for an application at <a href=\"mailto...   \n","9     Adopted  Meet Doc!  He's  a 1 year old chihuahua/dachsh...   \n","10    Adopted  Young puppies are under 2 years old.  They all...   \n","\n","                                rewritten_description  og_predictions  \\\n","0   Kenneth is a bright and social boy who enjoys ...               1   \n","1   Dru is a uniquely designed dog with a long bod...               1   \n","2   Shiloh is a playful and cuddly two-year-old pu...               0   \n","3   Are you searching for a loyal and energetic co...               1   \n","4   To ensure the well-being of our furry friends,...               1   \n","5   Tater is a lovable and loyal companion who is ...               1   \n","6   Stroker is a small mixed breed, possibly Bruss...               1   \n","7   Metro Barkley is a handsome 2-year-old Lhasa A...               0   \n","8   Please reach out to Dog It Dig It Rescue at do...               0   \n","9   Introducing Doc! This adorable 1-year-old Chih...               1   \n","10  Meet our young and adorable puppies at Compani...               1   \n","\n","    rw_predictions  \n","0                1  \n","1                1  \n","2                1  \n","3                1  \n","4                1  \n","5                1  \n","6                0  \n","7                1  \n","8                0  \n","9                1  \n","10               1  \n","\n","[11 rows x 114 columns]"],"text/html":["\n","  <div id=\"df-503d65fd-a1b8-4a27-951d-c9ff2bd09a03\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Unnamed: 0</th>\n","      <th>pet</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>color</th>\n","      <th>size</th>\n","      <th>photos</th>\n","      <th>vector_0</th>\n","      <th>vector_1</th>\n","      <th>...</th>\n","      <th>vector_96</th>\n","      <th>vector_97</th>\n","      <th>vector_98</th>\n","      <th>vector_99</th>\n","      <th>pid</th>\n","      <th>adopted</th>\n","      <th>description_y</th>\n","      <th>rewritten_description</th>\n","      <th>og_predictions</th>\n","      <th>rw_predictions</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1441</td>\n","      <td>49343</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Small</td>\n","      <td>6</td>\n","      <td>-0.121777</td>\n","      <td>-0.218044</td>\n","      <td>...</td>\n","      <td>0.088650</td>\n","      <td>0.103574</td>\n","      <td>-0.028310</td>\n","      <td>0.314079</td>\n","      <td>42736159</td>\n","      <td>Adopted</td>\n","      <td>This handsome guy would like nothing better th...</td>\n","      <td>Kenneth is a bright and social boy who enjoys ...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2824</td>\n","      <td>22419</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Small</td>\n","      <td>3</td>\n","      <td>-0.001406</td>\n","      <td>-0.037863</td>\n","      <td>...</td>\n","      <td>0.120176</td>\n","      <td>0.116002</td>\n","      <td>-0.019253</td>\n","      <td>0.370966</td>\n","      <td>42949769</td>\n","      <td>Adopted</td>\n","      <td>You know anyone can have a purebred dog, and d...</td>\n","      <td>Dru is a uniquely designed dog with a long bod...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4111</td>\n","      <td>212739</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.014582</td>\n","      <td>0.412747</td>\n","      <td>...</td>\n","      <td>-0.054529</td>\n","      <td>0.456621</td>\n","      <td>-0.344998</td>\n","      <td>0.192412</td>\n","      <td>36712299</td>\n","      <td>Unadopted</td>\n","      <td>Shiloh Shiloh is a playful little two year-old...</td>\n","      <td>Shiloh is a playful and cuddly two-year-old pu...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4139</td>\n","      <td>79898</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Small</td>\n","      <td>3</td>\n","      <td>-0.186583</td>\n","      <td>-0.076838</td>\n","      <td>...</td>\n","      <td>-0.149038</td>\n","      <td>0.028844</td>\n","      <td>-0.119140</td>\n","      <td>0.358402</td>\n","      <td>40791869</td>\n","      <td>Adopted</td>\n","      <td>Are you looking for an active and energetic an...</td>\n","      <td>Are you searching for a loyal and energetic co...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4424</td>\n","      <td>64173</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>-0.066086</td>\n","      <td>-0.013621</td>\n","      <td>...</td>\n","      <td>0.059037</td>\n","      <td>0.059345</td>\n","      <td>0.152540</td>\n","      <td>0.157250</td>\n","      <td>42489893</td>\n","      <td>Adopted</td>\n","      <td>Our goal is to have all adopted dogs spayed/ne...</td>\n","      <td>To ensure the well-being of our furry friends,...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4457</td>\n","      <td>21493</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.001903</td>\n","      <td>0.026786</td>\n","      <td>...</td>\n","      <td>0.126646</td>\n","      <td>-0.055693</td>\n","      <td>-0.001383</td>\n","      <td>0.234727</td>\n","      <td>43468723</td>\n","      <td>Adopted</td>\n","      <td>WELL HERE WE GO AGAIN.........  As hard as I t...</td>\n","      <td>Tater is a lovable and loyal companion who is ...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>5085</td>\n","      <td>211254</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Small</td>\n","      <td>3</td>\n","      <td>-0.090937</td>\n","      <td>-0.250903</td>\n","      <td>...</td>\n","      <td>0.139796</td>\n","      <td>0.046125</td>\n","      <td>-0.304366</td>\n","      <td>0.276967</td>\n","      <td>39822464</td>\n","      <td>Unadopted</td>\n","      <td>Hi, my name is: STROKER I am a: Small mixed br...</td>\n","      <td>Stroker is a small mixed breed, possibly Bruss...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>5282</td>\n","      <td>211794</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Small</td>\n","      <td>2</td>\n","      <td>0.085650</td>\n","      <td>-0.107940</td>\n","      <td>...</td>\n","      <td>-0.148934</td>\n","      <td>0.332792</td>\n","      <td>0.057637</td>\n","      <td>0.464162</td>\n","      <td>42089771</td>\n","      <td>Unadopted</td>\n","      <td>Hi ya Peeps! It's me Metro Barkley and I am lo...</td>\n","      <td>Metro Barkley is a handsome 2-year-old Lhasa A...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>5574</td>\n","      <td>141635</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Small</td>\n","      <td>3</td>\n","      <td>0.012118</td>\n","      <td>-0.007725</td>\n","      <td>...</td>\n","      <td>0.054592</td>\n","      <td>-0.027791</td>\n","      <td>0.056678</td>\n","      <td>0.028045</td>\n","      <td>26527929</td>\n","      <td>Unadopted</td>\n","      <td>Email us for an application at &lt;a href=\"mailto...</td>\n","      <td>Please reach out to Dog It Dig It Rescue at do...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>6449</td>\n","      <td>10089</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Small</td>\n","      <td>3</td>\n","      <td>0.259467</td>\n","      <td>-0.019212</td>\n","      <td>...</td>\n","      <td>0.299457</td>\n","      <td>0.087704</td>\n","      <td>-0.077071</td>\n","      <td>0.483191</td>\n","      <td>37565105</td>\n","      <td>Adopted</td>\n","      <td>Meet Doc!  He's  a 1 year old chihuahua/dachsh...</td>\n","      <td>Introducing Doc! This adorable 1-year-old Chih...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>7538</td>\n","      <td>87749</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Small</td>\n","      <td>5</td>\n","      <td>0.093385</td>\n","      <td>-0.079673</td>\n","      <td>...</td>\n","      <td>0.062229</td>\n","      <td>0.026060</td>\n","      <td>-0.156860</td>\n","      <td>0.190361</td>\n","      <td>41247211</td>\n","      <td>Adopted</td>\n","      <td>Young puppies are under 2 years old.  They all...</td>\n","      <td>Meet our young and adorable puppies at Compani...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>11 rows × 114 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-503d65fd-a1b8-4a27-951d-c9ff2bd09a03')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-503d65fd-a1b8-4a27-951d-c9ff2bd09a03 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-503d65fd-a1b8-4a27-951d-c9ff2bd09a03');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-85f636d2-6976-49dc-b31b-e70ad1c91334\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-85f636d2-6976-49dc-b31b-e70ad1c91334')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-85f636d2-6976-49dc-b31b-e70ad1c91334 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"filtered_df2"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["filtered_df2.iloc[9]['description_y']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":71},"id":"Sx0m9WLdWUYf","executionInfo":{"status":"ok","timestamp":1715610452506,"user_tz":-120,"elapsed":212,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"bf661e90-2b65-4a6f-ca98-9cb41d484d6b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"Meet Doc!  He's  a 1 year old chihuahua/dachshund  mix who weighs  about 12 pounds. He's  energetic, playful and very loving.  Doc seems to like other dogs  and although  he's  curious  about the cat he doesn't bother him.  He's  a pretty  happy guy. Since he's  a little  overweight  his new  family would need to give him plenty of exercise  and watch what he eats.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["filtered_df2.iloc[7]['description_y']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":196},"id":"QMgeLd4GWY4b","executionInfo":{"status":"ok","timestamp":1715610627187,"user_tz":-120,"elapsed":240,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"425f51dc-6969-4f88-b4d4-c755fbf5d049"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"Hi ya Peeps! It's me Metro Barkley and I am looking for love and a future right here on Petfinder. So read about me and let me know if you think we might be a good match. I'm looking forward to meeting you soon! Here's my stats: Possible Breed: Lhasa Apso Gender: I'm a guy, an hombre, a dude Colors: Classic black and white Age: The vet says about 2 years young Weight: Around 13 pounds Metro needs a very special foster or family to help him with fear. When he first meets someone, he is very afraid and nips. Once he gets to know a person, this behavior disappears and you'd never know he has this tendency. The perfect home has no kids under 16 and people who are patient and understanding. He needs time to learn that humans won't hurt him again. If you have not yet been approved, begin an application to adopt Metro or one of our other pups at www.shihtzu-rescue.com. PS. I've had ALL my vetting, and oh boy, it was a lot. Here's what I had done: Distemper/Parvo shots- TWICE. One shot doesn't cut it. Bordetella shots - ALSO TWICE. Spay/Neuter-of course. A fecal exam so I don't have any bad worms. Treatment if I do. A heartworm test. Treatment if I am positive for heart worms BLOODWORK to make sure my liver and kidneys are working well, because you know, we doggies often have issues in the liver and kidneys. A DENTAL exam AND cleaning if I needed it- yep, all my toofies are checked out. See, that's a LOT. Ask your vet - that's a LOT.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["filtered_df2.iloc[2]['rewritten_description']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":107},"id":"8Uj1s3XIWlt0","executionInfo":{"status":"ok","timestamp":1715610523491,"user_tz":-120,"elapsed":336,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"18a59023-864b-44ef-f648-708ae35b10ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Shiloh is a playful and cuddly two-year-old pup who loves to run and play both indoors and outdoors. He may be shy at first due to past experiences but warms up quickly with some love and patience. Shiloh enjoys company, particularly from playful female dogs, and loves car rides. He is good with kids but prefers gentle interactions, making him a great companion for a calm and loving family. If you are looking for a loyal and affectionate friend, Shiloh may just be the perfect match for you. Contact Southern Arizona Beagle Rescue to meet this sweet boy and consider providing him with a forever home full of love and care.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["una = new_data[(new_data['adopted'] == 'Adopted') & (new_data['og_predictions'] == 1) & (new_data['rw_predictions'] == 0)]"],"metadata":{"id":"OW5IizV2WxTY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["una"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":843},"id":"7akdvplHOyLb","executionInfo":{"status":"ok","timestamp":1715843312700,"user_tz":-120,"elapsed":228,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"b0405e6b-0600-4103-fdf6-09eb2b9784b2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0     pet     age  gender            color    size  photos  \\\n","0         107349     Dog  Senior    Male      White_Cream   Small       1   \n","2          65311     Cat  Senior  Female      Black_White  Medium       1   \n","9         108429  Rabbit   Adult    Male          Unknown  Medium       3   \n","26         51388     Dog   Adult  Female          Unknown   Large       1   \n","29         37166     Cat   Adult  Female  Brown_Chocolate  Medium       2   \n","...          ...     ...     ...     ...              ...     ...     ...   \n","7830       23860     Dog   Adult    Male          Unknown   Large       4   \n","7876       32086     Dog   Young  Female          Unknown  Medium       3   \n","7888       62941     Dog   Adult  Female            Black  Medium       4   \n","7956      107699     Cat   Adult    Male            Black  Medium       6   \n","7961       99638     Cat   Adult  Female            Other  Medium       1   \n","\n","      vector_0  vector_1  vector_2  ...  vector_96  vector_97  vector_98  \\\n","0     0.261437  0.008734  0.097171  ...   0.076132   0.231228  -0.015402   \n","2    -0.331073 -0.269659  0.095112  ...   0.200590   0.076650  -0.063295   \n","9     0.163335 -0.159791  0.218801  ...   0.113877  -0.089151   0.103122   \n","26    0.011124 -0.068539 -0.139674  ...   0.099510   0.089132  -0.159982   \n","29   -0.203001 -0.110457  0.064681  ...   0.094386   0.201807  -0.087399   \n","...        ...       ...       ...  ...        ...        ...        ...   \n","7830  0.239633 -0.180053  0.102808  ...  -0.115017   0.342828   0.010289   \n","7876  0.115206 -0.000923 -0.011584  ...   0.119580   0.114454  -0.168253   \n","7888  0.094918 -0.192304  0.023284  ...   0.063897  -0.116442  -0.070300   \n","7956  0.381526 -0.107751 -0.307385  ...   0.585871   0.654053   0.022776   \n","7961 -0.158102  0.010122 -0.002639  ...   0.101946   0.073720  -0.014263   \n","\n","      vector_99       pid  adopted  \\\n","0      0.585188  40847443  Adopted   \n","2      0.470014  42591488  Adopted   \n","9      0.350895  40886201  Adopted   \n","26     0.501632  41547478  Adopted   \n","29     0.679396  40019568  Adopted   \n","...         ...       ...      ...   \n","7830   0.354563  43252576  Adopted   \n","7876   0.193726  42897919  Adopted   \n","7888   0.399738  42214316  Adopted   \n","7956   0.273790  41664584  Adopted   \n","7961   0.231187  43338898  Adopted   \n","\n","                                          description_y  \\\n","0     Available for adoption now!  Brawny is a male ...   \n","2     <FONT SIZE=3> <FONT COLOR=\"669900\"><b>I am ava...   \n","9     This sweet guy formerly named BunBun came to M...   \n","26    The dog/cat adoption fee, which is normally $6...   \n","29    We are located inside of East Lake Veterinary ...   \n","...                                                 ...   \n","7830  Murphy is a three-year-old knock-out handsome ...   \n","7876  You can fill out an adoption application onlin...   \n","7888  Bree has found her forever home in Rockland, M...   \n","7956  Black Friday is a magnificent 2-year old male ...   \n","7961  Flame is about 4-5 years old and would make a ...   \n","\n","                                  rewritten_description  og_predictions  \\\n","0     Brawny, an 8-year-old male Malti-Poo, is ready...               1   \n","2     This sweet cat is looking for a forever home! ...               1   \n","9     BunBun is a charming adult rabbit who is seeki...               1   \n","26    Please note that the adoption fee for dogs and...               1   \n","29    Located inside East Lake Veterinary Hospital i...               1   \n","...                                                 ...             ...   \n","7830  Meet Murphy, a resilient three-year-old chocol...               1   \n","7876  Meet Meredith, a sweet and gentle girl who is ...               1   \n","7888  Bree is a playful, 1-year-old shepherd mix wei...               1   \n","7956  Black Friday is a stunning 2-year-old male cat...               1   \n","7961  Flame, a 4-5 year old independent feline, is s...               1   \n","\n","      rw_predictions  \n","0                  0  \n","2                  0  \n","9                  0  \n","26                 0  \n","29                 0  \n","...              ...  \n","7830               0  \n","7876               0  \n","7888               0  \n","7956               0  \n","7961               0  \n","\n","[662 rows x 113 columns]"],"text/html":["\n","  <div id=\"df-70761a21-c2dc-43df-a40a-7a0bc3d5afc0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>pet</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>color</th>\n","      <th>size</th>\n","      <th>photos</th>\n","      <th>vector_0</th>\n","      <th>vector_1</th>\n","      <th>vector_2</th>\n","      <th>...</th>\n","      <th>vector_96</th>\n","      <th>vector_97</th>\n","      <th>vector_98</th>\n","      <th>vector_99</th>\n","      <th>pid</th>\n","      <th>adopted</th>\n","      <th>description_y</th>\n","      <th>rewritten_description</th>\n","      <th>og_predictions</th>\n","      <th>rw_predictions</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>107349</td>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Male</td>\n","      <td>White_Cream</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.261437</td>\n","      <td>0.008734</td>\n","      <td>0.097171</td>\n","      <td>...</td>\n","      <td>0.076132</td>\n","      <td>0.231228</td>\n","      <td>-0.015402</td>\n","      <td>0.585188</td>\n","      <td>40847443</td>\n","      <td>Adopted</td>\n","      <td>Available for adoption now!  Brawny is a male ...</td>\n","      <td>Brawny, an 8-year-old male Malti-Poo, is ready...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>65311</td>\n","      <td>Cat</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>Black_White</td>\n","      <td>Medium</td>\n","      <td>1</td>\n","      <td>-0.331073</td>\n","      <td>-0.269659</td>\n","      <td>0.095112</td>\n","      <td>...</td>\n","      <td>0.200590</td>\n","      <td>0.076650</td>\n","      <td>-0.063295</td>\n","      <td>0.470014</td>\n","      <td>42591488</td>\n","      <td>Adopted</td>\n","      <td>&lt;FONT SIZE=3&gt; &lt;FONT COLOR=\"669900\"&gt;&lt;b&gt;I am ava...</td>\n","      <td>This sweet cat is looking for a forever home! ...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>108429</td>\n","      <td>Rabbit</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Unknown</td>\n","      <td>Medium</td>\n","      <td>3</td>\n","      <td>0.163335</td>\n","      <td>-0.159791</td>\n","      <td>0.218801</td>\n","      <td>...</td>\n","      <td>0.113877</td>\n","      <td>-0.089151</td>\n","      <td>0.103122</td>\n","      <td>0.350895</td>\n","      <td>40886201</td>\n","      <td>Adopted</td>\n","      <td>This sweet guy formerly named BunBun came to M...</td>\n","      <td>BunBun is a charming adult rabbit who is seeki...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>51388</td>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Female</td>\n","      <td>Unknown</td>\n","      <td>Large</td>\n","      <td>1</td>\n","      <td>0.011124</td>\n","      <td>-0.068539</td>\n","      <td>-0.139674</td>\n","      <td>...</td>\n","      <td>0.099510</td>\n","      <td>0.089132</td>\n","      <td>-0.159982</td>\n","      <td>0.501632</td>\n","      <td>41547478</td>\n","      <td>Adopted</td>\n","      <td>The dog/cat adoption fee, which is normally $6...</td>\n","      <td>Please note that the adoption fee for dogs and...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>37166</td>\n","      <td>Cat</td>\n","      <td>Adult</td>\n","      <td>Female</td>\n","      <td>Brown_Chocolate</td>\n","      <td>Medium</td>\n","      <td>2</td>\n","      <td>-0.203001</td>\n","      <td>-0.110457</td>\n","      <td>0.064681</td>\n","      <td>...</td>\n","      <td>0.094386</td>\n","      <td>0.201807</td>\n","      <td>-0.087399</td>\n","      <td>0.679396</td>\n","      <td>40019568</td>\n","      <td>Adopted</td>\n","      <td>We are located inside of East Lake Veterinary ...</td>\n","      <td>Located inside East Lake Veterinary Hospital i...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7830</th>\n","      <td>23860</td>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Unknown</td>\n","      <td>Large</td>\n","      <td>4</td>\n","      <td>0.239633</td>\n","      <td>-0.180053</td>\n","      <td>0.102808</td>\n","      <td>...</td>\n","      <td>-0.115017</td>\n","      <td>0.342828</td>\n","      <td>0.010289</td>\n","      <td>0.354563</td>\n","      <td>43252576</td>\n","      <td>Adopted</td>\n","      <td>Murphy is a three-year-old knock-out handsome ...</td>\n","      <td>Meet Murphy, a resilient three-year-old chocol...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7876</th>\n","      <td>32086</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Female</td>\n","      <td>Unknown</td>\n","      <td>Medium</td>\n","      <td>3</td>\n","      <td>0.115206</td>\n","      <td>-0.000923</td>\n","      <td>-0.011584</td>\n","      <td>...</td>\n","      <td>0.119580</td>\n","      <td>0.114454</td>\n","      <td>-0.168253</td>\n","      <td>0.193726</td>\n","      <td>42897919</td>\n","      <td>Adopted</td>\n","      <td>You can fill out an adoption application onlin...</td>\n","      <td>Meet Meredith, a sweet and gentle girl who is ...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7888</th>\n","      <td>62941</td>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Female</td>\n","      <td>Black</td>\n","      <td>Medium</td>\n","      <td>4</td>\n","      <td>0.094918</td>\n","      <td>-0.192304</td>\n","      <td>0.023284</td>\n","      <td>...</td>\n","      <td>0.063897</td>\n","      <td>-0.116442</td>\n","      <td>-0.070300</td>\n","      <td>0.399738</td>\n","      <td>42214316</td>\n","      <td>Adopted</td>\n","      <td>Bree has found her forever home in Rockland, M...</td>\n","      <td>Bree is a playful, 1-year-old shepherd mix wei...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7956</th>\n","      <td>107699</td>\n","      <td>Cat</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Medium</td>\n","      <td>6</td>\n","      <td>0.381526</td>\n","      <td>-0.107751</td>\n","      <td>-0.307385</td>\n","      <td>...</td>\n","      <td>0.585871</td>\n","      <td>0.654053</td>\n","      <td>0.022776</td>\n","      <td>0.273790</td>\n","      <td>41664584</td>\n","      <td>Adopted</td>\n","      <td>Black Friday is a magnificent 2-year old male ...</td>\n","      <td>Black Friday is a stunning 2-year-old male cat...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7961</th>\n","      <td>99638</td>\n","      <td>Cat</td>\n","      <td>Adult</td>\n","      <td>Female</td>\n","      <td>Other</td>\n","      <td>Medium</td>\n","      <td>1</td>\n","      <td>-0.158102</td>\n","      <td>0.010122</td>\n","      <td>-0.002639</td>\n","      <td>...</td>\n","      <td>0.101946</td>\n","      <td>0.073720</td>\n","      <td>-0.014263</td>\n","      <td>0.231187</td>\n","      <td>43338898</td>\n","      <td>Adopted</td>\n","      <td>Flame is about 4-5 years old and would make a ...</td>\n","      <td>Flame, a 4-5 year old independent feline, is s...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>662 rows × 113 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-70761a21-c2dc-43df-a40a-7a0bc3d5afc0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-70761a21-c2dc-43df-a40a-7a0bc3d5afc0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-70761a21-c2dc-43df-a40a-7a0bc3d5afc0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-892e651e-7a95-4610-838f-894e0fac98dc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-892e651e-7a95-4610-838f-894e0fac98dc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-892e651e-7a95-4610-838f-894e0fac98dc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"una"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["una = una.reset_index()"],"metadata":{"id":"2OEbxBxDPL5F"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["una"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":843},"id":"KBdipnLBPR9T","executionInfo":{"status":"ok","timestamp":1715843442782,"user_tz":-120,"elapsed":228,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"545b4fcb-4398-4c18-8903-723481982f56"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     index  Unnamed: 0     pet     age  gender            color    size  \\\n","0        0      107349     Dog  Senior    Male      White_Cream   Small   \n","1        2       65311     Cat  Senior  Female      Black_White  Medium   \n","2        9      108429  Rabbit   Adult    Male          Unknown  Medium   \n","3       26       51388     Dog   Adult  Female          Unknown   Large   \n","4       29       37166     Cat   Adult  Female  Brown_Chocolate  Medium   \n","..     ...         ...     ...     ...     ...              ...     ...   \n","657   7830       23860     Dog   Adult    Male          Unknown   Large   \n","658   7876       32086     Dog   Young  Female          Unknown  Medium   \n","659   7888       62941     Dog   Adult  Female            Black  Medium   \n","660   7956      107699     Cat   Adult    Male            Black  Medium   \n","661   7961       99638     Cat   Adult  Female            Other  Medium   \n","\n","     photos  vector_0  vector_1  ...  vector_96  vector_97  vector_98  \\\n","0         1  0.261437  0.008734  ...   0.076132   0.231228  -0.015402   \n","1         1 -0.331073 -0.269659  ...   0.200590   0.076650  -0.063295   \n","2         3  0.163335 -0.159791  ...   0.113877  -0.089151   0.103122   \n","3         1  0.011124 -0.068539  ...   0.099510   0.089132  -0.159982   \n","4         2 -0.203001 -0.110457  ...   0.094386   0.201807  -0.087399   \n","..      ...       ...       ...  ...        ...        ...        ...   \n","657       4  0.239633 -0.180053  ...  -0.115017   0.342828   0.010289   \n","658       3  0.115206 -0.000923  ...   0.119580   0.114454  -0.168253   \n","659       4  0.094918 -0.192304  ...   0.063897  -0.116442  -0.070300   \n","660       6  0.381526 -0.107751  ...   0.585871   0.654053   0.022776   \n","661       1 -0.158102  0.010122  ...   0.101946   0.073720  -0.014263   \n","\n","     vector_99       pid  adopted  \\\n","0     0.585188  40847443  Adopted   \n","1     0.470014  42591488  Adopted   \n","2     0.350895  40886201  Adopted   \n","3     0.501632  41547478  Adopted   \n","4     0.679396  40019568  Adopted   \n","..         ...       ...      ...   \n","657   0.354563  43252576  Adopted   \n","658   0.193726  42897919  Adopted   \n","659   0.399738  42214316  Adopted   \n","660   0.273790  41664584  Adopted   \n","661   0.231187  43338898  Adopted   \n","\n","                                         description_y  \\\n","0    Available for adoption now!  Brawny is a male ...   \n","1    <FONT SIZE=3> <FONT COLOR=\"669900\"><b>I am ava...   \n","2    This sweet guy formerly named BunBun came to M...   \n","3    The dog/cat adoption fee, which is normally $6...   \n","4    We are located inside of East Lake Veterinary ...   \n","..                                                 ...   \n","657  Murphy is a three-year-old knock-out handsome ...   \n","658  You can fill out an adoption application onlin...   \n","659  Bree has found her forever home in Rockland, M...   \n","660  Black Friday is a magnificent 2-year old male ...   \n","661  Flame is about 4-5 years old and would make a ...   \n","\n","                                 rewritten_description  og_predictions  \\\n","0    Brawny, an 8-year-old male Malti-Poo, is ready...               1   \n","1    This sweet cat is looking for a forever home! ...               1   \n","2    BunBun is a charming adult rabbit who is seeki...               1   \n","3    Please note that the adoption fee for dogs and...               1   \n","4    Located inside East Lake Veterinary Hospital i...               1   \n","..                                                 ...             ...   \n","657  Meet Murphy, a resilient three-year-old chocol...               1   \n","658  Meet Meredith, a sweet and gentle girl who is ...               1   \n","659  Bree is a playful, 1-year-old shepherd mix wei...               1   \n","660  Black Friday is a stunning 2-year-old male cat...               1   \n","661  Flame, a 4-5 year old independent feline, is s...               1   \n","\n","     rw_predictions  \n","0                 0  \n","1                 0  \n","2                 0  \n","3                 0  \n","4                 0  \n","..              ...  \n","657               0  \n","658               0  \n","659               0  \n","660               0  \n","661               0  \n","\n","[662 rows x 114 columns]"],"text/html":["\n","  <div id=\"df-9602961d-7342-4de0-b344-77325c954877\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Unnamed: 0</th>\n","      <th>pet</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>color</th>\n","      <th>size</th>\n","      <th>photos</th>\n","      <th>vector_0</th>\n","      <th>vector_1</th>\n","      <th>...</th>\n","      <th>vector_96</th>\n","      <th>vector_97</th>\n","      <th>vector_98</th>\n","      <th>vector_99</th>\n","      <th>pid</th>\n","      <th>adopted</th>\n","      <th>description_y</th>\n","      <th>rewritten_description</th>\n","      <th>og_predictions</th>\n","      <th>rw_predictions</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>107349</td>\n","      <td>Dog</td>\n","      <td>Senior</td>\n","      <td>Male</td>\n","      <td>White_Cream</td>\n","      <td>Small</td>\n","      <td>1</td>\n","      <td>0.261437</td>\n","      <td>0.008734</td>\n","      <td>...</td>\n","      <td>0.076132</td>\n","      <td>0.231228</td>\n","      <td>-0.015402</td>\n","      <td>0.585188</td>\n","      <td>40847443</td>\n","      <td>Adopted</td>\n","      <td>Available for adoption now!  Brawny is a male ...</td>\n","      <td>Brawny, an 8-year-old male Malti-Poo, is ready...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>65311</td>\n","      <td>Cat</td>\n","      <td>Senior</td>\n","      <td>Female</td>\n","      <td>Black_White</td>\n","      <td>Medium</td>\n","      <td>1</td>\n","      <td>-0.331073</td>\n","      <td>-0.269659</td>\n","      <td>...</td>\n","      <td>0.200590</td>\n","      <td>0.076650</td>\n","      <td>-0.063295</td>\n","      <td>0.470014</td>\n","      <td>42591488</td>\n","      <td>Adopted</td>\n","      <td>&lt;FONT SIZE=3&gt; &lt;FONT COLOR=\"669900\"&gt;&lt;b&gt;I am ava...</td>\n","      <td>This sweet cat is looking for a forever home! ...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9</td>\n","      <td>108429</td>\n","      <td>Rabbit</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Unknown</td>\n","      <td>Medium</td>\n","      <td>3</td>\n","      <td>0.163335</td>\n","      <td>-0.159791</td>\n","      <td>...</td>\n","      <td>0.113877</td>\n","      <td>-0.089151</td>\n","      <td>0.103122</td>\n","      <td>0.350895</td>\n","      <td>40886201</td>\n","      <td>Adopted</td>\n","      <td>This sweet guy formerly named BunBun came to M...</td>\n","      <td>BunBun is a charming adult rabbit who is seeki...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>26</td>\n","      <td>51388</td>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Female</td>\n","      <td>Unknown</td>\n","      <td>Large</td>\n","      <td>1</td>\n","      <td>0.011124</td>\n","      <td>-0.068539</td>\n","      <td>...</td>\n","      <td>0.099510</td>\n","      <td>0.089132</td>\n","      <td>-0.159982</td>\n","      <td>0.501632</td>\n","      <td>41547478</td>\n","      <td>Adopted</td>\n","      <td>The dog/cat adoption fee, which is normally $6...</td>\n","      <td>Please note that the adoption fee for dogs and...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>29</td>\n","      <td>37166</td>\n","      <td>Cat</td>\n","      <td>Adult</td>\n","      <td>Female</td>\n","      <td>Brown_Chocolate</td>\n","      <td>Medium</td>\n","      <td>2</td>\n","      <td>-0.203001</td>\n","      <td>-0.110457</td>\n","      <td>...</td>\n","      <td>0.094386</td>\n","      <td>0.201807</td>\n","      <td>-0.087399</td>\n","      <td>0.679396</td>\n","      <td>40019568</td>\n","      <td>Adopted</td>\n","      <td>We are located inside of East Lake Veterinary ...</td>\n","      <td>Located inside East Lake Veterinary Hospital i...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>657</th>\n","      <td>7830</td>\n","      <td>23860</td>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Unknown</td>\n","      <td>Large</td>\n","      <td>4</td>\n","      <td>0.239633</td>\n","      <td>-0.180053</td>\n","      <td>...</td>\n","      <td>-0.115017</td>\n","      <td>0.342828</td>\n","      <td>0.010289</td>\n","      <td>0.354563</td>\n","      <td>43252576</td>\n","      <td>Adopted</td>\n","      <td>Murphy is a three-year-old knock-out handsome ...</td>\n","      <td>Meet Murphy, a resilient three-year-old chocol...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>658</th>\n","      <td>7876</td>\n","      <td>32086</td>\n","      <td>Dog</td>\n","      <td>Young</td>\n","      <td>Female</td>\n","      <td>Unknown</td>\n","      <td>Medium</td>\n","      <td>3</td>\n","      <td>0.115206</td>\n","      <td>-0.000923</td>\n","      <td>...</td>\n","      <td>0.119580</td>\n","      <td>0.114454</td>\n","      <td>-0.168253</td>\n","      <td>0.193726</td>\n","      <td>42897919</td>\n","      <td>Adopted</td>\n","      <td>You can fill out an adoption application onlin...</td>\n","      <td>Meet Meredith, a sweet and gentle girl who is ...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>659</th>\n","      <td>7888</td>\n","      <td>62941</td>\n","      <td>Dog</td>\n","      <td>Adult</td>\n","      <td>Female</td>\n","      <td>Black</td>\n","      <td>Medium</td>\n","      <td>4</td>\n","      <td>0.094918</td>\n","      <td>-0.192304</td>\n","      <td>...</td>\n","      <td>0.063897</td>\n","      <td>-0.116442</td>\n","      <td>-0.070300</td>\n","      <td>0.399738</td>\n","      <td>42214316</td>\n","      <td>Adopted</td>\n","      <td>Bree has found her forever home in Rockland, M...</td>\n","      <td>Bree is a playful, 1-year-old shepherd mix wei...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>660</th>\n","      <td>7956</td>\n","      <td>107699</td>\n","      <td>Cat</td>\n","      <td>Adult</td>\n","      <td>Male</td>\n","      <td>Black</td>\n","      <td>Medium</td>\n","      <td>6</td>\n","      <td>0.381526</td>\n","      <td>-0.107751</td>\n","      <td>...</td>\n","      <td>0.585871</td>\n","      <td>0.654053</td>\n","      <td>0.022776</td>\n","      <td>0.273790</td>\n","      <td>41664584</td>\n","      <td>Adopted</td>\n","      <td>Black Friday is a magnificent 2-year old male ...</td>\n","      <td>Black Friday is a stunning 2-year-old male cat...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>661</th>\n","      <td>7961</td>\n","      <td>99638</td>\n","      <td>Cat</td>\n","      <td>Adult</td>\n","      <td>Female</td>\n","      <td>Other</td>\n","      <td>Medium</td>\n","      <td>1</td>\n","      <td>-0.158102</td>\n","      <td>0.010122</td>\n","      <td>...</td>\n","      <td>0.101946</td>\n","      <td>0.073720</td>\n","      <td>-0.014263</td>\n","      <td>0.231187</td>\n","      <td>43338898</td>\n","      <td>Adopted</td>\n","      <td>Flame is about 4-5 years old and would make a ...</td>\n","      <td>Flame, a 4-5 year old independent feline, is s...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>662 rows × 114 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9602961d-7342-4de0-b344-77325c954877')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9602961d-7342-4de0-b344-77325c954877 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9602961d-7342-4de0-b344-77325c954877');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-54a25638-80d5-4290-9054-75f2940c17a5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-54a25638-80d5-4290-9054-75f2940c17a5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-54a25638-80d5-4290-9054-75f2940c17a5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"una"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["una.iloc[661]['description_y']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"ypDyvUIXPP12","executionInfo":{"status":"ok","timestamp":1715843474253,"user_tz":-120,"elapsed":246,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"fd1b6738-83e4-4a8e-967d-bf6ed0e4a517"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Flame is about 4-5 years old and would make a wonderful barn cat.  She is not one to want petting or cuddling, but she should be great a catching mice!  Adoption fee is $65 and she is spayed and ready to go.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["una.iloc[661]['rewritten_description']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":71},"id":"IPFOlMRMPblZ","executionInfo":{"status":"ok","timestamp":1715843501645,"user_tz":-120,"elapsed":224,"user":{"displayName":"Kuki Heiligers","userId":"02413165276744798614"}},"outputId":"a80f758c-bb85-413d-9956-a66eada3a0e2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"Flame, a 4-5 year old independent feline, is seeking a new home where she can thrive as a barn cat. With a talent for hunting mice, Flame's primary focus is on keeping your space pest-free. While not one for cuddling, her self-sufficiency makes her an ideal companion for outdoor living. For an adoption fee of $65, Flame is spayed and prepared to embark on her new role. Contact us to provide Flame with a safe and welcoming barn environment.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":21}]}]}